{"version":3,"file":"index.es.js","sources":["../src/providers/DateProvider.tsx","../src/constants/styles/colors.ts","../src/constants/styles/fonts.ts","../src/constants/styles/spaces.ts","../src/constants/theme.ts","../src/constants/styles/mixins.ts","../src/constants/styles/global.ts","../src/components/ThemeWrapper/index.tsx","../src/components/Calendar/Button/styled.ts","../src/components/Calendar/Button/index.tsx","../src/constants/calendarData.ts","../src/constants/holidays.ts","../src/utils/calendarDateData.ts","../src/providers/CalendarProvider.tsx","../src/utils/dataCaching.ts","../src/utils/borderRadiusCalculator.ts","../src/utils/colorCalculator.ts","../src/components/Calendar/DayOfWeek/styled.ts","../src/components/Calendar/DayOfWeek/index.tsx","../src/utils/calendarMonthData.ts","../src/utils/calendarData.ts","../src/components/Calendar/types.ts","../src/components/Calendar/DayOfWeekGrid/styled.ts","../src/components/Calendar/DayOfWeekGrid/index.tsx","../src/constants/icons.ts","../src/components/Calendar/GridSlider/types.ts","../src/components/Calendar/GridSlider/styled.ts","../src/components/Calendar/GridSlider/index.tsx","../src/components/Calendar/Weekday/styled.ts","../src/components/Calendar/Weekday/index.tsx","../src/components/Calendar/WeekdaysHeader/index.tsx","../src/hooks/useClickOutside.ts","../src/components/DatePicker/styled.ts","../src/components/DatePicker/index.tsx","../src/components/RangeDatePicker/styled.ts","../src/components/RangeDatePicker/index.tsx","../src/components/RangeDatePicker/config.ts","../src/components/DatePicker/DatePickerInput/config.ts","../src/components/DatePicker/DatePickerInput/styled.ts","../src/components/DatePicker/DatePickerInput/index.tsx","../src/components/ErrorBoundary/config.ts","../src/components/ErrorBoundary/styled.ts","../src/components/ErrorBoundary/index.tsx","../src/components/TodosModal/TodoInput/config.ts","../src/components/TodosModal/TodoInput/styled.ts","../src/components/TodosModal/TodoInput/index.tsx","../src/components/TodosModal/TodoItem/styled.ts","../src/components/TodosModal/TodoItem/index.tsx","../src/components/TodosModal/TodoItem/config.ts","../src/components/Modal/styled.ts","../src/components/Modal/index.tsx","../src/components/TodosModal/styled.ts","../src/components/TodosModal/index.tsx","../src/components/TodosModal/config.ts","../src/components/Calendar/styled.ts","../src/components/Calendar/index.tsx","../src/components/Calendar/config.ts","../src/decorators/index.tsx","../src/decorators/withHolidays/index.tsx","../src/decorators/withMinAndMaxDate/index.tsx","../src/decorators/withMondayFirst/index.tsx","../src/decorators/withRange/index.tsx","../src/decorators/withTodos/config.ts","../src/decorators/withTodos/index.tsx","../src/hooks/usePortal.ts","../src/hooks/config.ts","../src/decorators/withWeekends/index.tsx"],"sourcesContent":["import React, { createContext, useState, useContext } from \"react\";\r\n\r\nimport {\r\n  ProviderProps,\r\n  RangeValues,\r\n  DispatchDate,\r\n  DispatchRangeValues,\r\n} from \"./type\";\r\n\r\nconst defaultMinDate = new Date(2022, 0, 1);\r\nconst defaultMaxDate = new Date(2035, 11, 0);\r\n\r\nexport const DateContext = createContext<{\r\n  minDate: Date;\r\n  maxDate: Date;\r\n  range: RangeValues;\r\n  setMinDate: DispatchDate;\r\n  setMaxDate: DispatchDate;\r\n  setRange: DispatchRangeValues;\r\n}>({\r\n  minDate: defaultMinDate,\r\n  maxDate: defaultMaxDate,\r\n  range: undefined,\r\n  setMinDate: () => undefined,\r\n  setMaxDate: () => undefined,\r\n  setRange: () => undefined,\r\n});\r\n\r\nconst DateProvider = ({ children }: ProviderProps) => {\r\n  const [minDate, setMinDate] = useState(defaultMinDate);\r\n  const [maxDate, setMaxDate] = useState(defaultMaxDate);\r\n  const [range, setRange] = useState<RangeValues>({\r\n    rangeStart: undefined,\r\n    rangeEnd: undefined,\r\n  });\r\n\r\n  const value = {\r\n    minDate,\r\n    maxDate,\r\n    range,\r\n    setMinDate,\r\n    setMaxDate,\r\n    setRange,\r\n  };\r\n\r\n  return <DateContext.Provider value={value}>{children}</DateContext.Provider>;\r\n};\r\n\r\nconst useDate = () => {\r\n  return useContext(DateContext);\r\n};\r\n\r\nexport { DateProvider, useDate };\r\n","import { Colors } from \"constants/types\";\r\n\r\nexport const COLORS: Colors = {\r\n  white: \"#ffffff\",\r\n  black: \"#333333\",\r\n  gray: \"#f1f1f1\",\r\n  lightGray: \"#aaaaaa\",\r\n  darkBlueHover: \"#5185cb\",\r\n  darkBlue: \"#2f80ed\",\r\n  blue: \"#2f80ed99\",\r\n  lightBlue: \"#2f80ed1a\",\r\n  red: \"#b91414\",\r\n  orange: \"#f97e00\",\r\n};\r\n","import { Fonts } from \"constants/types\";\r\n\r\nexport const FONTS: Fonts = {\r\n  fontFamily: { openSans: \"Open Sans\" },\r\n  fontSize: {\r\n    xl: 20,\r\n    l: 15,\r\n    m: 14,\r\n    s: 13,\r\n  },\r\n  fontWeight: {\r\n    l: 700,\r\n    m: 600,\r\n    s: 400,\r\n  },\r\n};\r\n","import { Spaces } from \"constants/types\";\r\n\r\nexport const SPACES: Spaces = {\r\n  l: 16,\r\n  m: 8,\r\n  s: 4,\r\n};\r\n","import { COLORS, FONTS, SPACES } from \"constants/styles\";\r\n\r\nimport { Theme } from \"./types\";\r\n\r\nexport const THEME: Theme = {\r\n  colors: {\r\n    ...COLORS,\r\n  },\r\n  fonts: {\r\n    ...FONTS,\r\n  },\r\n  spaces: {\r\n    ...SPACES,\r\n  },\r\n};\r\n","import { css } from \"styled-components\";\r\n\r\nimport { FONTS } from \"./fonts\";\r\n\r\nexport const displayFlex = css`\r\n  display: flex;\r\n`;\r\n\r\nexport const flexColumn = css`\r\n  ${displayFlex}\r\n\r\n  flex-direction: column;\r\n`;\r\n\r\nexport const contentCenter = css`\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nexport const baseText = css`\r\n  font-size: ${FONTS.fontSize.s}px;\r\n  font-weight: ${FONTS.fontWeight.m};\r\n  font-style: normal;\r\n  line-height: normal;\r\n`;\r\n","import styled, { createGlobalStyle } from \"styled-components\";\r\n\r\nimport { FONTS } from \"./fonts\";\r\nimport { baseText, contentCenter, displayFlex, flexColumn } from \"./mixins\";\r\nimport { SPACES } from \"./spaces\";\r\n\r\nexport const GlobalStyle = createGlobalStyle`\r\n    * {\r\n        font-family: ${FONTS.fontFamily.openSans};\r\n        box-sizing: border-box;\r\n        user-select: none;\r\n        text-decoration: none;\r\n        list-style: none;\r\n        outline: none;\r\n        margin: 0;\r\n        padding: 0;\r\n    }\r\n`;\r\n\r\nexport const Button = styled.button`\r\n  ${flexColumn}\r\n  ${contentCenter}\r\n  ${baseText}\r\n  \r\n  background: transparent;\r\n  border: none;\r\n  cursor: pointer;\r\n`;\r\n\r\nexport const Container = styled.div`\r\n  ${displayFlex}\r\n  ${contentCenter}\r\n  \r\n  cursor: default;\r\n`;\r\n\r\nexport const Icon = styled.img`\r\n  width: 16px;\r\n  height: 16px;\r\n  cursor: pointer;\r\n`;\r\n\r\nexport const Title = styled.h1`\r\n  ${baseText}\r\n\r\n  font-size:  ${FONTS.fontSize.xl}px;\r\n  font-weight: ${FONTS.fontWeight.l};\r\n`;\r\n\r\nexport const BaseInput = styled.input`\r\n  ${baseText}\r\n\r\n  margin: ${SPACES.m}px;\r\n  font-size: ${FONTS.fontSize.l}px;\r\n  font-weight: ${FONTS.fontWeight.s};\r\n  width: 100%;\r\n  border: none;\r\n  background: transparent;\r\n`;\r\n","import { ThemeProvider } from \"styled-components\";\r\n\r\nimport { THEME } from \"constants/theme\";\r\nimport { GlobalStyle } from \"constants/styles/global\";\r\n\r\nimport { ThemeWrapperProps } from \"./types\";\r\n\r\nconst ThemeWrapper = ({ children }: ThemeWrapperProps) => (\r\n  <>\r\n    <GlobalStyle />\r\n    <ThemeProvider theme={THEME}>{children}</ThemeProvider>\r\n  </>\r\n);\r\n\r\nexport default ThemeWrapper;\r\n","import styled, { DefaultTheme } from \"styled-components\";\r\n\r\nimport { Button } from \"constants/styles/global\";\r\nimport { baseText } from \"constants/styles/mixins\";\r\n\r\nimport { ButtonStyledProps } from \"./types\";\r\n\r\nconst spaceS = ({ theme }: DefaultTheme) => theme.spaces.s;\r\nconst grayColor = ({ theme }: DefaultTheme) => theme.colors.gray;\r\nconst whiteColor = ({ theme }: DefaultTheme) => theme.colors.white;\r\n\r\nexport const ButtonContainer = styled(Button)<ButtonStyledProps>`\r\n  ${baseText}\r\n\r\n  padding: ${spaceS}px 0;\r\n  border: 1px solid ${grayColor};\r\n  background-color: ${whiteColor};\r\n  border-bottom: ${({ $isTodosEnabled }) => $isTodosEnabled && `none`};\r\n  border-radius: ${({ $isTodosEnabled }) =>\r\n    $isTodosEnabled ? \"0\" : \"0 0 8px 8px\"};\r\n  width: 100%;\r\n  min-width: 224px;\r\n  justify-content: space-between;\r\n\r\n  &:hover {\r\n    background-color: ${grayColor};\r\n  }\r\n`;\r\n","import React from \"react\";\r\n\r\nimport { ButtonProps } from \"./types\";\r\nimport { ButtonContainer } from \"./styled\";\r\n\r\nconst Button = React.memo(\r\n  ({ title, onButtonClick, $isTodosEnabled }: ButtonProps) => {\r\n    return (\r\n      <ButtonContainer\r\n        $isTodosEnabled={$isTodosEnabled}\r\n        data-testid=\"calendar-button\"\r\n        onClick={onButtonClick}\r\n      >\r\n        {title}\r\n      </ButtonContainer>\r\n    );\r\n  },\r\n);\r\n\r\nexport default Button;\r\n","import { Weekday } from \"./types\";\r\n\r\nexport enum RANGE_STATE {\r\n  Start = \"Start\",\r\n  Between = \"Between\",\r\n  End = \"End\",\r\n}\r\n\r\nexport const WEEKDAYS: Weekday = {\r\n  Sunday: \"Su\",\r\n  Monday: \"Mo\",\r\n  Tuesday: \"Tu\",\r\n  Wednesday: \"We\",\r\n  Thursday: \"Th\",\r\n  Friday: \"Fr\",\r\n  Saturday: \"Sa\",\r\n};\r\n\r\nexport enum MONTH {\r\n  January,\r\n  February,\r\n  March,\r\n  April,\r\n  May,\r\n  June,\r\n  July,\r\n  August,\r\n  September,\r\n  October,\r\n  November,\r\n  December,\r\n}\r\n\r\nexport const DAYS_IN_WEEK = 7;\r\nexport const MIN_CALENDAR_DAYS = 35;\r\nexport const MAX_CALENDAR_DAYS = 42;\r\nexport const MONTH_COUNT = 12;\r\nexport const DATE_UNIT = 1;\r\n","export const HOLIDAYS = [\r\n  {\r\n    name: \"New Year's Day\",\r\n    date: new Date(\"2022-01-01\"),\r\n  },\r\n  {\r\n    name: \"Orthodox Christmas Eve\",\r\n    date: new Date(\"2022-01-06\"),\r\n  },\r\n  {\r\n    name: \"Orthodox Christmas Day\",\r\n    date: new Date(\"2022-01-07\"),\r\n  },\r\n  {\r\n    name: \"Defender of the Fatherland Day\",\r\n    date: new Date(\"2022-02-23\"),\r\n  },\r\n  {\r\n    name: \"International Women's Day\",\r\n    date: new Date(\"2022-03-08\"),\r\n  },\r\n  {\r\n    name: \"March Equinox\",\r\n    date: new Date(\"2022-03-20\"),\r\n  },\r\n  {\r\n    name: \"International Labor Day\",\r\n    date: new Date(\"2022-05-01\"),\r\n  },\r\n  {\r\n    name: \"Commemoration Day\",\r\n    date: new Date(\"2022-05-03\"),\r\n  },\r\n  {\r\n    name: \"Victory Day\",\r\n    date: new Date(\"2022-05-09\"),\r\n  },\r\n  {\r\n    name: \"June Solstice\",\r\n    date: new Date(\"2022-06-21\"),\r\n  },\r\n  {\r\n    name: \"Independence Day\",\r\n    date: new Date(\"2022-07-03\"),\r\n  },\r\n  {\r\n    name: \"September Equinox\",\r\n    date: new Date(\"2022-09-03\"),\r\n  },\r\n  {\r\n    name: \"Mother's Day\",\r\n    date: new Date(\"2022-10-14\"),\r\n  },\r\n  {\r\n    name: \"October Revolution Day\",\r\n    date: new Date(\"2022-11-07\"),\r\n  },\r\n  {\r\n    name: \"Christmas Eve\",\r\n    date: new Date(\"2022-12-24\"),\r\n  },\r\n  {\r\n    name: \"Christmas Day\",\r\n    date: new Date(\"2022-12-25\"),\r\n  },\r\n  {\r\n    name: \"New Year's Eve\",\r\n    date: new Date(\"2022-12-31\"),\r\n  },\r\n];\r\n","import { DATE_UNIT, DAYS_IN_WEEK } from \"constants/calendarData\";\r\nimport { HOLIDAYS } from \"constants/holidays\";\r\n\r\nexport const getFirstDayOfWeek = (\r\n  selectedDate: Date,\r\n  isMondayFirst = false,\r\n) => {\r\n  const firstDay = new Date(selectedDate);\r\n\r\n  if (isMondayFirst) {\r\n    const dayOfWeek = firstDay.getDay();\r\n    const daysToMonday =\r\n      dayOfWeek === 0 ? DAYS_IN_WEEK - DATE_UNIT : dayOfWeek - DATE_UNIT;\r\n    firstDay.setDate(firstDay.getDate() - daysToMonday);\r\n  } else {\r\n    firstDay.setDate(firstDay.getDate() - firstDay.getDay());\r\n  }\r\n\r\n  return firstDay;\r\n};\r\n\r\nexport const isWeekendDate = (date: Date): boolean => {\r\n  return date.getDay() === 0 || date.getDay() === DAYS_IN_WEEK - DATE_UNIT;\r\n};\r\n\r\nexport const isHolidayDate = (date: Date): boolean => {\r\n  return HOLIDAYS.some(\r\n    (holiday) =>\r\n      date.getDate() === holiday.date.getDate() &&\r\n      date.getMonth() === holiday.date.getMonth(),\r\n  );\r\n};\r\n\r\nexport const formatDate = (date: Date): string => {\r\n  const day = date.getDate().toString().padStart(2, \"0\");\r\n  const month = (date.getMonth() + DATE_UNIT).toString().padStart(2, \"0\");\r\n  const year = date.getFullYear().toString();\r\n\r\n  return `${day}/${month}/${year}`;\r\n};\r\n","import { createContext, useState, useContext } from \"react\";\r\n\r\nimport { getFirstDayOfWeek } from \"utils/calendarDateData\";\r\n\r\nimport { DispatchDate, DispatchNumber, ProviderProps } from \"./type\";\r\n\r\nconst date = new Date();\r\nconst month = date.getMonth();\r\nconst year = date.getFullYear();\r\nconst firstDayOfWeek = getFirstDayOfWeek(date);\r\n\r\nexport const CalendarContext = createContext<{\r\n  firstDateOfWeek: Date;\r\n  selectedDate: Date;\r\n  selectedMonth: number;\r\n  selectedYear: number;\r\n  setFirstDateOfWeek: DispatchDate;\r\n  setSelectedDate: DispatchDate;\r\n  setSelectedMonth: DispatchNumber;\r\n  setSelectedYear: DispatchNumber;\r\n}>({\r\n  firstDateOfWeek: firstDayOfWeek,\r\n  selectedDate: date,\r\n  selectedMonth: month,\r\n  selectedYear: year,\r\n  setFirstDateOfWeek: () => undefined,\r\n  setSelectedDate: () => undefined,\r\n  setSelectedMonth: () => undefined,\r\n  setSelectedYear: () => undefined,\r\n});\r\n\r\nconst CalendarProvider = ({ children }: ProviderProps) => {\r\n  const [firstDateOfWeek, setFirstDateOfWeek] = useState(firstDayOfWeek);\r\n  const [selectedDate, setSelectedDate] = useState(date);\r\n  const [selectedMonth, setSelectedMonth] = useState(month);\r\n  const [selectedYear, setSelectedYear] = useState(year);\r\n\r\n  const value = {\r\n    firstDateOfWeek,\r\n    selectedDate,\r\n    selectedMonth,\r\n    selectedYear,\r\n    setSelectedDate,\r\n    setSelectedMonth,\r\n    setSelectedYear,\r\n    setFirstDateOfWeek,\r\n  };\r\n\r\n  return (\r\n    <CalendarContext.Provider value={value}>\r\n      {children}\r\n    </CalendarContext.Provider>\r\n  );\r\n};\r\n\r\nconst useCalendar = () => {\r\n  return useContext(CalendarContext);\r\n};\r\n\r\nexport { CalendarProvider, useCalendar };\r\n","function getCache<T>(cacheKey: string): [] {\r\n  const cachedData = localStorage.getItem(cacheKey);\r\n\r\n  return cachedData ? JSON.parse(cachedData) : ([] as T);\r\n}\r\n\r\nfunction saveCache(cacheKey: string, cacheValue: unknown) {\r\n  localStorage.setItem(cacheKey, JSON.stringify(cacheValue));\r\n}\r\n\r\nfunction removeCache(cacheKey: string) {\r\n  localStorage.removeItem(cacheKey);\r\n}\r\n\r\nexport { getCache, saveCache, removeCache };\r\n","import { RANGE_STATE } from \"constants/calendarData\";\r\n\r\nconst { Start, Between, End } = RANGE_STATE;\r\n\r\nexport const determineRadius = ($rangeState?: RANGE_STATE) => {\r\n  switch ($rangeState) {\r\n    case Start: {\r\n      return \"8px 0 0 8px\";\r\n    }\r\n    case Between: {\r\n      return \"0\";\r\n    }\r\n    case End: {\r\n      return \"0 8px 8px 0\";\r\n    }\r\n    default: {\r\n      return \"8px\";\r\n    }\r\n  }\r\n};\r\n","import { RANGE_STATE } from \"constants/calendarData\";\r\nimport { COLORS } from \"constants/styles\";\r\n\r\nconst { Start, Between, End } = RANGE_STATE;\r\nconst { darkBlue, blue, lightBlue, white, orange, lightGray, red, black } =\r\n  COLORS;\r\n\r\nexport const determineBackgroundColor = (\r\n  $isSelected: boolean,\r\n  $rangeState: RANGE_STATE | undefined,\r\n): string => {\r\n  if ($isSelected || $rangeState === End) return darkBlue;\r\n  if ($rangeState === Start) return blue;\r\n  if ($rangeState === Between) return lightBlue;\r\n\r\n  return white;\r\n};\r\n\r\nexport const determineTextColor = (\r\n  $isSelected: boolean,\r\n  $isDisabled: boolean,\r\n  $isWeekend: boolean,\r\n  $rangeState: RANGE_STATE | undefined,\r\n  $isHoliday: boolean,\r\n): string => {\r\n  if ($isSelected || $rangeState === Start || $rangeState === End) return white;\r\n  if ($isHoliday) return orange;\r\n  if ($rangeState === Between) return darkBlue;\r\n  if ($isDisabled) return lightGray;\r\n  if ($isWeekend) return red;\r\n\r\n  return black;\r\n};\r\n","import styled, { DefaultTheme } from \"styled-components\";\r\n\r\nimport { determineRadius } from \"utils/borderRadiusCalculator\";\r\nimport {\r\n  determineBackgroundColor,\r\n  determineTextColor,\r\n} from \"utils/colorCalculator\";\r\n\r\nimport { Button } from \"constants/styles/global\";\r\n\r\nimport { DayOfWeekStyleProps } from \"./types\";\r\n\r\nconst grayColor = ({ theme }: DefaultTheme) => theme.colors.gray;\r\nconst darkBlueHoverColor = ({ theme }: DefaultTheme) =>\r\n  theme.colors.darkBlueHover;\r\nconst orangeColor = ({ theme }: DefaultTheme) => theme.colors.orange;\r\nconst spaceM = ({ theme }: DefaultTheme) => theme.spaces.m;\r\n\r\nexport const DayOfWeekButton = styled(Button)<DayOfWeekStyleProps>`\r\n  background-color: ${({ $isSelected, $rangeState }) =>\r\n    determineBackgroundColor($isSelected, $rangeState)};\r\n  color: ${({\r\n    $isSelected,\r\n    $isDisabled,\r\n    $isWeekend,\r\n    $rangeState,\r\n    $isHoliday,\r\n  }) =>\r\n    determineTextColor(\r\n      $isSelected,\r\n      $isDisabled,\r\n      $isWeekend,\r\n      $rangeState,\r\n      $isHoliday,\r\n    )};\r\n  padding: ${spaceM}px;\r\n  border-radius: ${({ $rangeState }) => determineRadius($rangeState)};\r\n  width: 32px;\r\n  height: 38px;\r\n\r\n  &:hover {\r\n    background-color: ${({ $isSelected }) =>\r\n      $isSelected ? darkBlueHoverColor : grayColor};\r\n  }\r\n`;\r\n\r\nexport const Dot = styled.div`\r\n  background-color: ${orangeColor};\r\n  width: 3px;\r\n  height: 3px;\r\n  border-radius: 50%;\r\n`;\r\n","import React, { useCallback } from \"react\";\r\n\r\nimport { useCalendar } from \"providers/CalendarProvider\";\r\nimport { useDate } from \"providers/DateProvider\";\r\n\r\nimport { getCache } from \"utils/dataCaching\";\r\n\r\nimport { RANGE_STATE } from \"constants/calendarData\";\r\n\r\nimport { DayOfWeekProps } from \"./types\";\r\nimport { DayOfWeekButton, Dot } from \"./styled\";\r\n\r\nconst { Start, End, Between } = RANGE_STATE;\r\n\r\nconst DayofWeek = React.memo((props: DayOfWeekProps) => {\r\n  const {\r\n    dayOfWeek,\r\n    isSelected = false,\r\n    isDisabled = false,\r\n    isWeekend = false,\r\n    isWithRange = false,\r\n    minDate = undefined,\r\n    maxDate = undefined,\r\n    isTodosEnabled = false,\r\n    isHoliday = false,\r\n  } = props;\r\n\r\n  const { range, setRange } = useDate();\r\n  const { setSelectedDate, setSelectedMonth, setSelectedYear } = useCalendar();\r\n\r\n  const day = dayOfWeek.getDate();\r\n  const month = dayOfWeek.getMonth();\r\n  const year = dayOfWeek.getFullYear();\r\n\r\n  const handleSelectDate = useCallback(() => {\r\n    const canChangeMonth =\r\n      (!minDate || dayOfWeek >= minDate) && (!maxDate || dayOfWeek <= maxDate);\r\n\r\n    if (canChangeMonth) {\r\n      setSelectedDate(dayOfWeek);\r\n      setSelectedMonth(month);\r\n      setSelectedYear(year);\r\n\r\n      if (isWithRange && (!range || (!range.rangeStart && !range.rangeEnd))) {\r\n        setRange({ rangeStart: dayOfWeek, rangeEnd: undefined });\r\n      } else {\r\n        const start = range && range.rangeStart ? range.rangeStart : dayOfWeek;\r\n        const rangeArr =\r\n          dayOfWeek < start ? [dayOfWeek, start] : [start, dayOfWeek];\r\n\r\n        setRange({ rangeStart: rangeArr[0], rangeEnd: rangeArr[1] });\r\n      }\r\n    }\r\n  }, [\r\n    minDate,\r\n    dayOfWeek,\r\n    maxDate,\r\n    setSelectedDate,\r\n    setSelectedMonth,\r\n    month,\r\n    setSelectedYear,\r\n    year,\r\n    isWithRange,\r\n    range,\r\n    setRange,\r\n  ]);\r\n\r\n  const getRangeState = (date: Date) => {\r\n    if (range && range.rangeStart) {\r\n      if (date.getTime() === range.rangeStart.getTime()) {\r\n        return Start;\r\n      }\r\n\r\n      if (range.rangeEnd && date.getTime() === range.rangeEnd.getTime()) {\r\n        return End;\r\n      }\r\n\r\n      if (range.rangeEnd && date > range.rangeStart && date < range.rangeEnd) {\r\n        return Between;\r\n      }\r\n    }\r\n  };\r\n\r\n  const todos = getCache(dayOfWeek.toDateString());\r\n\r\n  return (\r\n    <>\r\n      <DayOfWeekButton\r\n        $isDisabled={isDisabled}\r\n        $isHoliday={isHoliday}\r\n        $isSelected={isSelected}\r\n        $isWeekend={isWeekend}\r\n        $rangeState={getRangeState(dayOfWeek)}\r\n        data-testid=\"day-of-week\"\r\n        onClick={handleSelectDate}\r\n      >\r\n        {day}\r\n        {isTodosEnabled && todos.length !== 0 && <Dot />}\r\n      </DayOfWeekButton>\r\n    </>\r\n  );\r\n});\r\n\r\nexport default DayofWeek;\r\n","import { DATE_UNIT, MONTH, MONTH_COUNT } from \"constants/calendarData\";\r\n\r\nexport const isCurrentMonth = (date: Date, selectedMonth: number) => {\r\n  return date.getMonth() !== selectedMonth;\r\n};\r\n\r\nexport const getPreviousMonth = (month: number, year: number) => {\r\n  if (month === 0) {\r\n    return { month: MONTH_COUNT - DATE_UNIT, year: year - DATE_UNIT };\r\n  } else {\r\n    return { month: month - DATE_UNIT, year };\r\n  }\r\n};\r\n\r\nexport const getNextMonth = (month: number, year: number) => {\r\n  if (month === MONTH_COUNT - DATE_UNIT) {\r\n    return { month: 0, year: year + DATE_UNIT };\r\n  } else {\r\n    return { month: month + DATE_UNIT, year };\r\n  }\r\n};\r\n\r\nexport const getDaysInMonth = (year: number, month: number) => {\r\n  const date = new Date(year, month + DATE_UNIT, 0);\r\n\r\n  return date.getDate();\r\n};\r\n\r\nexport function getMonthFirstDay(year: number, month: number) {\r\n  const firstDayOfMonth = new Date(year, month, 1);\r\n  const dayOfWeek = firstDayOfMonth.getDay();\r\n\r\n  return dayOfWeek;\r\n}\r\n\r\nexport const getLastDayOfPreviousMonth = (currentDate: Date) => {\r\n  let year = currentDate.getFullYear();\r\n  const month = currentDate.getMonth();\r\n\r\n  let prevMonth = month - DATE_UNIT;\r\n\r\n  if (prevMonth === -1) {\r\n    prevMonth = MONTH.December;\r\n    year--;\r\n  }\r\n\r\n  const lastDayOfPreviousMonth = new Date(year, prevMonth, 0);\r\n\r\n  return lastDayOfPreviousMonth;\r\n};\r\n","import {\r\n  DATE_UNIT,\r\n  DAYS_IN_WEEK,\r\n  MAX_CALENDAR_DAYS,\r\n  MONTH_COUNT,\r\n} from \"constants/calendarData\";\r\n\r\nimport {\r\n  getDaysInMonth,\r\n  getMonthFirstDay,\r\n  getNextMonth,\r\n  getPreviousMonth,\r\n} from \"./calendarMonthData\";\r\n\r\nexport const isSelectedDay = (date: Date, selectedDate: Date): boolean => {\r\n  return (\r\n    date.getDate() === selectedDate.getDate() &&\r\n    date.getMonth() === selectedDate.getMonth() &&\r\n    date.getFullYear() === selectedDate.getFullYear()\r\n  );\r\n};\r\n\r\nexport const getCalendarWeekData = (firstDayOfWeek: Date) => {\r\n  return Array.from({ length: DAYS_IN_WEEK }, (_, i) => {\r\n    const currentDate = new Date(firstDayOfWeek);\r\n    currentDate.setDate(firstDayOfWeek.getDate() + i);\r\n\r\n    return currentDate;\r\n  });\r\n};\r\n\r\nexport const getCalendarMonthData = (\r\n  monthNumber: number,\r\n  year: number,\r\n  isMondayFirst?: boolean,\r\n) => {\r\n  const totalDaysInMonth = getDaysInMonth(year, monthNumber);\r\n  const monthFirstDay = getMonthFirstDay(year, monthNumber);\r\n\r\n  let daysFromPrevMonth: number;\r\n  if (isMondayFirst) {\r\n    daysFromPrevMonth =\r\n      (DAYS_IN_WEEK + monthFirstDay - DATE_UNIT) % DAYS_IN_WEEK;\r\n  } else {\r\n    daysFromPrevMonth = (DAYS_IN_WEEK + monthFirstDay) % DAYS_IN_WEEK;\r\n  }\r\n\r\n  const { month: prevMonth, year: prevMonthYear } = getPreviousMonth(\r\n    monthNumber,\r\n    year,\r\n  );\r\n  const { month: nextMonth, year: nextMonthYear } = getNextMonth(\r\n    monthNumber,\r\n    year,\r\n  );\r\n\r\n  const prevMonthDays = getDaysInMonth(prevMonthYear, prevMonth);\r\n\r\n  const prevMonthDates = Array.from({ length: daysFromPrevMonth }, (_, i) => {\r\n    const day = prevMonthDays - daysFromPrevMonth + DATE_UNIT + i;\r\n    return new Date(prevMonthYear, prevMonth, day);\r\n  });\r\n\r\n  const currentMonthDates = Array.from({ length: totalDaysInMonth }, (_, i) => {\r\n    const day = i + DATE_UNIT;\r\n    return new Date(year, monthNumber, day);\r\n  });\r\n\r\n  const remainingDays = totalDaysInMonth + daysFromPrevMonth;\r\n  const weeksToAdd = Math.ceil(MAX_CALENDAR_DAYS / DAYS_IN_WEEK);\r\n  const daysToAdd = weeksToAdd * DAYS_IN_WEEK - remainingDays;\r\n\r\n  const nextMonthDates = Array.from({ length: daysToAdd }, (_, i) => {\r\n    const day = i + DATE_UNIT;\r\n    const newDate = new Date(nextMonthYear, nextMonth, day);\r\n\r\n    return newDate.getMonth() === nextMonth ? newDate : null;\r\n  }).filter((date) => date !== null) as Date[];\r\n\r\n  return [...prevMonthDates, ...currentMonthDates, ...nextMonthDates];\r\n};\r\n\r\nexport const getCalendarYearData = (year: number, isMondayFirst = false) => {\r\n  return Array.from({ length: MONTH_COUNT }, (_, month) =>\r\n    getCalendarMonthData(month, year, isMondayFirst),\r\n  );\r\n};\r\n","export interface CalendarProps {\r\n  type: CALENDAR_TYPES;\r\n  isMondayFirst?: boolean;\r\n  isWeekendDate?: (date: Date) => boolean;\r\n  isWithRange?: boolean;\r\n  minDate?: Date;\r\n  maxDate?: Date;\r\n  isTodosEnabled?: boolean;\r\n  isHolidayDate?: (date: Date) => boolean;\r\n}\r\n\r\nexport interface CalendarStyledProps {\r\n  $isRangeExist?: boolean;\r\n  $isTodosEnabled?: boolean;\r\n}\r\n\r\nexport enum CALENDAR_TYPES {\r\n  Week = 1,\r\n  Month = 2,\r\n  Year = 3,\r\n}\r\n","import styled, { DefaultTheme } from \"styled-components\";\r\n\r\nimport { Container } from \"constants/styles/global\";\r\nimport { baseText } from \"constants/styles/mixins\";\r\n\r\nconst spaceM = ({ theme }: DefaultTheme) => theme.spaces.m;\r\n\r\nexport const DayOfWeekGridContainer = styled.div`\r\n  display: grid;\r\n  grid-template-columns: repeat(7, 1fr);\r\n  grid-template-rows: repeat(1, 1fr);\r\n  width: fit-content;\r\n`;\r\n\r\nexport const YearCalendarContainer = styled(DayOfWeekGridContainer)`\r\n  grid-template-columns: repeat(4, 1fr);\r\n  grid-template-rows: repeat(3, 1fr);\r\n  align-items: baseline;\r\n`;\r\n\r\nexport const MiniCalendarWrapper = styled(Container)`\r\n  padding: ${spaceM}px;\r\n  flex-direction: column;\r\n`;\r\n\r\nexport const MonthText = styled.p`\r\n  ${baseText}\r\n\r\n  align-self: flex-start;\r\n  padding-left: ${spaceM}px;\r\n`;\r\n","import { useMemo } from \"react\";\r\n\r\nimport { useCalendar } from \"providers/CalendarProvider\";\r\n\r\nimport { DayOfWeek, WeekdaysHeader } from \"components/index\";\r\n\r\nimport {\r\n  getCalendarMonthData,\r\n  getCalendarWeekData,\r\n  getCalendarYearData,\r\n  isSelectedDay,\r\n} from \"utils/calendarData\";\r\nimport { isCurrentMonth } from \"utils/calendarMonthData\";\r\n\r\nimport { DAYS_IN_WEEK, MONTH } from \"constants/calendarData\";\r\n\r\nimport { CALENDAR_TYPES } from \"../types\";\r\n\r\nimport { DayOfWeekGridProps } from \"./types\";\r\nimport {\r\n  DayOfWeekGridContainer,\r\n  MiniCalendarWrapper,\r\n  MonthText,\r\n  YearCalendarContainer,\r\n} from \"./styled\";\r\n\r\nconst { Week, Month, Year } = CALENDAR_TYPES;\r\n\r\nconst DayOfWeekGrid = (props: DayOfWeekGridProps) => {\r\n  const {\r\n    type,\r\n    isMondayFirst,\r\n    isWeekendDate,\r\n    isWithRange,\r\n    minDate,\r\n    maxDate,\r\n    isTodosEnabled,\r\n    isHolidayDate,\r\n  } = props;\r\n\r\n  const { firstDateOfWeek, selectedDate, selectedMonth, selectedYear } =\r\n    useCalendar();\r\n\r\n  const GREED_DATA = useMemo(() => {\r\n    if (type === Week) {\r\n      return getCalendarWeekData(firstDateOfWeek);\r\n    } else if (type === Month) {\r\n      return getCalendarMonthData(selectedMonth, selectedYear, isMondayFirst);\r\n    }\r\n  }, [firstDateOfWeek, selectedMonth, selectedYear, isMondayFirst, type]);\r\n\r\n  const YEAR_GREED_DATA = useMemo(() => {\r\n    if (type === Year) {\r\n      return getCalendarYearData(selectedYear, isMondayFirst);\r\n    }\r\n  }, [type, selectedYear, isMondayFirst]);\r\n\r\n  return (\r\n    <>\r\n      {GREED_DATA && (\r\n        <DayOfWeekGridContainer data-testid=\"day-of-week-grid\">\r\n          {GREED_DATA.map((date) => {\r\n            return (\r\n              <DayOfWeek\r\n                dayOfWeek={date}\r\n                isDisabled={isCurrentMonth(date, selectedMonth)}\r\n                isHoliday={isHolidayDate && isHolidayDate(date)}\r\n                isSelected={isSelectedDay(date, selectedDate)}\r\n                isTodosEnabled={isTodosEnabled}\r\n                isWeekend={isWeekendDate && isWeekendDate(date)}\r\n                isWithRange={isWithRange}\r\n                key={date.getTime()}\r\n                maxDate={maxDate}\r\n                minDate={minDate}\r\n              />\r\n            );\r\n          })}\r\n        </DayOfWeekGridContainer>\r\n      )}\r\n      {type === Year && YEAR_GREED_DATA && (\r\n        <YearCalendarContainer data-testid=\"day-of-week-grid-year\">\r\n          {YEAR_GREED_DATA.map((month) => {\r\n            const currentMonth = month[DAYS_IN_WEEK].getMonth();\r\n\r\n            return (\r\n              <MiniCalendarWrapper key={month[DAYS_IN_WEEK].getTime()}>\r\n                <MonthText>{MONTH[currentMonth]}</MonthText>\r\n                <WeekdaysHeader isMondayFirst={isMondayFirst} />\r\n                <DayOfWeekGridContainer>\r\n                  {month.map((date) => (\r\n                    <DayOfWeek\r\n                      dayOfWeek={date}\r\n                      isDisabled={isCurrentMonth(date, currentMonth)}\r\n                      isHoliday={isHolidayDate && isHolidayDate(date)}\r\n                      isSelected={isSelectedDay(date, selectedDate)}\r\n                      isTodosEnabled={isTodosEnabled}\r\n                      isWeekend={isWeekendDate && isWeekendDate(date)}\r\n                      isWithRange={isWithRange}\r\n                      key={date.getTime()}\r\n                      maxDate={maxDate}\r\n                      minDate={minDate}\r\n                    />\r\n                  ))}\r\n                </DayOfWeekGridContainer>\r\n              </MiniCalendarWrapper>\r\n            );\r\n          })}\r\n        </YearCalendarContainer>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default DayOfWeekGrid;\r\n","import CaledarIcon from \"assets/icons/calendar.svg\";\r\nimport ClearIcon from \"assets/icons/clear.svg\";\r\nimport CloseIcon from \"assets/icons/close.svg\";\r\nimport NextIcon from \"assets/icons/next.svg\";\r\nimport PrevIcon from \"assets/icons/prev.svg\";\r\n\r\nexport const ICONS = {\r\n  calendar: CaledarIcon,\r\n  clear: ClearIcon,\r\n  close: CloseIcon,\r\n  nextGrid: NextIcon,\r\n  prevGrid: PrevIcon,\r\n};\r\n","import { CALENDAR_TYPES } from \"../types\";\r\n\r\nexport const PREV_GRID = \"prevGreed\" as const;\r\nexport const NEXT_GRID = \"nextGreed\" as const;\r\n\r\nexport type Direction = typeof NEXT_GRID | typeof PREV_GRID;\r\n\r\nexport interface GridSliderProps {\r\n  type: CALENDAR_TYPES;\r\n  minDate?: Date;\r\n  maxDate?: Date;\r\n  isMondayFirst?: boolean;\r\n}\r\n","import styled, { DefaultTheme } from \"styled-components\";\r\n\r\nimport { Button, Container } from \"constants/styles/global\";\r\nimport { baseText } from \"constants/styles/mixins\";\r\n\r\nconst spaceS = ({ theme }: DefaultTheme) => theme.spaces.s;\r\nconst fontSizeM = ({ theme }: DefaultTheme) => theme.fonts.fontSize.m;\r\nconst fontWeightL = ({ theme }: DefaultTheme) => theme.fonts.fontWeight.l;\r\n\r\nexport const SliderContainer = styled(Container)`\r\n  padding: ${spaceS}px 0;\r\n  width: 100%;\r\n  min-width: 224px;\r\n  justify-content: space-between;\r\n`;\r\n\r\nexport const SliderButton = styled(Button)`\r\n  width: 16px;\r\n  height: 16px;\r\n`;\r\n\r\nexport const Title = styled.h1`\r\n  ${baseText}\r\n\r\n  font-size: ${fontSizeM}px;\r\n  font-weight: ${fontWeightL};\r\n  cursor: pointer;\r\n`;\r\n","import React, { useCallback, useEffect } from \"react\";\r\n\r\nimport { useCalendar } from \"providers/CalendarProvider\";\r\n\r\nimport { getFirstDayOfWeek } from \"utils/calendarDateData\";\r\n\r\nimport { ICONS } from \"constants/icons\";\r\nimport { Icon } from \"constants/styles/global\";\r\nimport {\r\n  DAYS_IN_WEEK,\r\n  MONTH,\r\n  MONTH_COUNT,\r\n  DATE_UNIT,\r\n} from \"constants/calendarData\";\r\n\r\nimport { CALENDAR_TYPES } from \"../types\";\r\n\r\nimport { Direction, GridSliderProps, PREV_GRID, NEXT_GRID } from \"./types\";\r\nimport { SliderButton, SliderContainer, Title } from \"./styled\";\r\n\r\nconst { Week, Month, Year } = CALENDAR_TYPES;\r\nconst { prevGrid, nextGrid } = ICONS;\r\n\r\nconst GridSlider = React.memo((props: GridSliderProps) => {\r\n  const { type, minDate, maxDate, isMondayFirst } = props;\r\n\r\n  const {\r\n    selectedDate,\r\n    firstDateOfWeek,\r\n    selectedMonth,\r\n    selectedYear,\r\n    setFirstDateOfWeek,\r\n    setSelectedMonth,\r\n    setSelectedYear,\r\n  } = useCalendar();\r\n\r\n  useEffect(() => {\r\n    setFirstDateOfWeek(getFirstDayOfWeek(selectedDate, isMondayFirst));\r\n  }, [isMondayFirst, selectedDate, setFirstDateOfWeek]);\r\n\r\n  const title =\r\n    type === Year\r\n      ? `${selectedYear}`\r\n      : `${MONTH[selectedMonth]} ${selectedYear}`;\r\n\r\n  const handleGridChange = useCallback(\r\n    (direction: Direction) => () => {\r\n      let nextMonth = selectedMonth;\r\n      let nextYear = selectedYear;\r\n      const nextFirstDate = firstDateOfWeek;\r\n\r\n      if (type === Month) {\r\n        if (direction === NEXT_GRID) {\r\n          nextMonth = (selectedMonth + DATE_UNIT) % MONTH_COUNT;\r\n          nextYear =\r\n            selectedMonth === MONTH_COUNT - DATE_UNIT\r\n              ? selectedYear + DATE_UNIT\r\n              : selectedYear;\r\n        } else {\r\n          nextMonth = (selectedMonth - DATE_UNIT + MONTH_COUNT) % MONTH_COUNT;\r\n          nextYear =\r\n            selectedMonth === 0 ? selectedYear - DATE_UNIT : selectedYear;\r\n        }\r\n      }\r\n\r\n      if (type === Week) {\r\n        if (direction === NEXT_GRID) {\r\n          nextFirstDate.setDate(nextFirstDate.getDate() + DAYS_IN_WEEK);\r\n        } else {\r\n          nextFirstDate.setDate(nextFirstDate.getDate() - DAYS_IN_WEEK);\r\n        }\r\n\r\n        nextMonth = firstDateOfWeek.getMonth();\r\n        nextYear = firstDateOfWeek.getFullYear();\r\n        setFirstDateOfWeek(new Date(nextFirstDate));\r\n      }\r\n\r\n      if (type === Year) {\r\n        if (direction === NEXT_GRID) {\r\n          nextYear++;\r\n        } else {\r\n          nextYear--;\r\n        }\r\n      }\r\n\r\n      const nextDate = new Date(nextYear, nextMonth);\r\n      const canChangeMonth =\r\n        (!minDate || nextDate >= minDate) && (!maxDate || nextDate <= maxDate);\r\n\r\n      if (canChangeMonth) {\r\n        setSelectedMonth(nextMonth);\r\n        setSelectedYear(nextYear);\r\n      }\r\n    },\r\n    [\r\n      firstDateOfWeek,\r\n      maxDate,\r\n      minDate,\r\n      selectedMonth,\r\n      selectedYear,\r\n      setFirstDateOfWeek,\r\n      setSelectedMonth,\r\n      setSelectedYear,\r\n      type,\r\n    ],\r\n  );\r\n\r\n  return (\r\n    <SliderContainer>\r\n      <SliderButton\r\n        data-testid=\"prev-button\"\r\n        onClick={handleGridChange(PREV_GRID)}\r\n      >\r\n        <Icon src={prevGrid} />\r\n      </SliderButton>\r\n      <Title data-testid=\"grid-slider\">{title}</Title>\r\n      <SliderButton\r\n        data-testid=\"next-button\"\r\n        onClick={handleGridChange(NEXT_GRID)}\r\n      >\r\n        <Icon src={nextGrid} />\r\n      </SliderButton>\r\n    </SliderContainer>\r\n  );\r\n});\r\n\r\nexport default GridSlider;\r\n","import styled, { DefaultTheme } from \"styled-components\";\r\n\r\nimport { baseText } from \"constants/styles/mixins\";\r\n\r\nconst whiteColor = ({ theme }: DefaultTheme) => theme.colors.white;\r\nconst blackColor = ({ theme }: DefaultTheme) => theme.colors.black;\r\nconst spaceM = ({ theme }: DefaultTheme) => theme.spaces.m;\r\nconst fontSizeM = ({ theme }: DefaultTheme) => theme.fonts.fontSize.m;\r\nconst fontWeightL = ({ theme }: DefaultTheme) => theme.fonts.fontWeight.l;\r\n\r\nexport const WeekdayContainer = styled.div`\r\n  ${baseText}\r\n\r\n  font-size: ${fontSizeM}px;\r\n  font-weight: ${fontWeightL};\r\n  background-color: ${whiteColor};\r\n  color: ${blackColor};\r\n  padding: ${spaceM}px;\r\n  width: 32px;\r\n  height: 32px;\r\n`;\r\n","import React from \"react\";\r\n\r\nimport { WeekdayProps } from \"./types\";\r\nimport { WeekdayContainer } from \"./styled\";\r\n\r\nconst Weekday = React.memo(({ weekday }: WeekdayProps) => {\r\n  return <WeekdayContainer>{weekday}</WeekdayContainer>;\r\n});\r\n\r\nexport default Weekday;\r\n","import React, { useMemo } from \"react\";\r\n\r\nimport { Weekday } from \"components/index\";\r\n\r\nimport { WEEKDAYS } from \"constants/calendarData\";\r\nimport { Container } from \"constants/styles/global\";\r\n\r\nimport { WeekdaysHeaderProps } from \"./types\";\r\n\r\nconst WeekdaysHeader = React.memo(({ isMondayFirst }: WeekdaysHeaderProps) => {\r\n  const WEEKDAYS_ARRAY = useMemo(() => {\r\n    const days = Object.values(WEEKDAYS);\r\n\r\n    return isMondayFirst ? [...days.slice(1), days[0]] : days;\r\n  }, [isMondayFirst]);\r\n\r\n  return (\r\n    <Container>\r\n      {WEEKDAYS_ARRAY.map((day) => (\r\n        <Weekday key={day} weekday={day} />\r\n      ))}\r\n    </Container>\r\n  );\r\n});\r\n\r\nexport default WeekdaysHeader;\r\n","import { useEffect, RefObject } from \"react\";\r\n\r\nconst useClickOutside = (\r\n  ref: RefObject<HTMLElement>,\r\n  handler: (event: MouseEvent) => void,\r\n) => {\r\n  useEffect(() => {\r\n    if (!handler) return;\r\n\r\n    const listener = (event: MouseEvent) => {\r\n      if (ref.current && !ref.current.contains(event.target as Node)) {\r\n        handler(event);\r\n      }\r\n    };\r\n\r\n    document.addEventListener(\"mousedown\", listener);\r\n\r\n    return () => {\r\n      document.removeEventListener(\"mousedown\", listener);\r\n    };\r\n  }, [ref, handler]);\r\n};\r\n\r\nexport default useClickOutside;\r\n","import styled, { DefaultTheme } from \"styled-components\";\r\n\r\nimport { baseText } from \"constants/styles/mixins\";\r\nimport { Container } from \"constants/styles/global\";\r\n\r\nconst fontSizeL = ({ theme }: DefaultTheme) => theme.fonts.fontSize.l;\r\nconst fontSizeS = ({ theme }: DefaultTheme) => theme.fonts.fontSize.s;\r\nconst fontWeightS = ({ theme }: DefaultTheme) => theme.fonts.fontWeight.s;\r\nconst grayColor = ({ theme }: DefaultTheme) => theme.colors.gray;\r\nconst redColor = ({ theme }: DefaultTheme) => theme.colors.red;\r\nconst spaceM = ({ theme }: DefaultTheme) => theme.spaces.m;\r\nconst spaceS = ({ theme }: DefaultTheme) => theme.spaces.s;\r\n\r\nexport const DatePickerContainer = styled(Container)`\r\n  flex-direction: column;\r\n  align-items: flex-start;\r\n`;\r\n\r\nexport const Label = styled.label`\r\n  ${baseText}\r\n\r\n  font-size: ${fontSizeL}px;\r\n`;\r\n\r\nexport const DatePickerInputWrapper = styled(Container)`\r\n  border: 1px solid ${grayColor};\r\n  padding: ${spaceM}px;\r\n  margin: ${spaceM}px 0;\r\n  gap: ${spaceS}px;\r\n  width: 246px;\r\n  justify-content: flex-start;\r\n  border-radius: 8px;\r\n  position: relative;\r\n`;\r\n\r\nexport const InfoContainer = styled(Container)`\r\n  gap: ${spaceS}px;\r\n`;\r\n\r\nexport const Error = styled.span`\r\n  ${baseText}\r\n\r\n  font-size: ${fontSizeS}px;\r\n  font-weight: ${fontWeightS};\r\n  color: ${redColor};\r\n`;\r\n\r\nexport const CalendarWrapper = styled.div`\r\n  position: absolute;\r\n  top: 56%;\r\n`;\r\n","import React, { useCallback, useEffect, useRef, useState } from \"react\";\r\n\r\nimport { useCalendar } from \"providers/CalendarProvider\";\r\nimport { useDate } from \"providers/DateProvider\";\r\n\r\nimport { DatePickerInput } from \"components/index\";\r\n\r\nimport useClickOutside from \"hooks/useClickOutside\";\r\n\r\nimport { formatDate } from \"utils/calendarDateData\";\r\n\r\nimport { ICONS } from \"constants/icons\";\r\nimport { Icon } from \"constants/styles/global\";\r\n\r\nimport { DatePickerPros } from \"./types\";\r\nimport {\r\n  DatePickerInputWrapper,\r\n  Label,\r\n  Error,\r\n  DatePickerContainer,\r\n  CalendarWrapper,\r\n  InfoContainer,\r\n} from \"./styled\";\r\n\r\nconst { calendar, clear } = ICONS;\r\n\r\nconst DatePicker = React.memo(\r\n  ({ label, rangeValue, Calendar }: DatePickerPros) => {\r\n    const [inputValue, setInputValue] = useState<string>(\"\");\r\n    const [error, setError] = useState<string>(\"\");\r\n    const [isCalendarOpen, setIsCalendarOpen] = useState<boolean>(false);\r\n\r\n    const calendarRef = useRef<HTMLDivElement | null>(null);\r\n\r\n    useClickOutside(calendarRef, () => {\r\n      setError(\"\");\r\n      setInputValue(formatDate(selectedDate));\r\n      setIsCalendarOpen(false);\r\n    });\r\n\r\n    const { selectedDate } = useCalendar();\r\n    const { setRange } = useDate();\r\n\r\n    useEffect(() => {\r\n      setInputValue(formatDate(selectedDate));\r\n    }, [selectedDate]);\r\n\r\n    const handleCalendarIconClick = useCallback(() => {\r\n      setError(\"\");\r\n      setInputValue(formatDate(selectedDate));\r\n      setIsCalendarOpen((prevValue) => !prevValue);\r\n    }, [selectedDate, setIsCalendarOpen]);\r\n\r\n    const handleClearInput = useCallback(() => {\r\n      setError(\"\");\r\n      setInputValue(\"\");\r\n      setRange({ rangeStart: undefined, rangeEnd: undefined });\r\n      setIsCalendarOpen(false);\r\n    }, [setRange]);\r\n\r\n    return (\r\n      <DatePickerContainer>\r\n        <InfoContainer>\r\n          <Label>{label}</Label>\r\n          {error && <Error>{error}</Error>}\r\n        </InfoContainer>\r\n        <DatePickerInputWrapper>\r\n          <Icon\r\n            data-testid=\"calendar-icon-button\"\r\n            src={calendar}\r\n            onClick={handleCalendarIconClick}\r\n          />\r\n          <DatePickerInput\r\n            inputValue={rangeValue || inputValue}\r\n            setError={setError}\r\n            setInputValue={setInputValue}\r\n            setIsCalendarOpen={setIsCalendarOpen}\r\n          />\r\n          {inputValue && (\r\n            <Icon\r\n              data-testid=\"clear-icon-button\"\r\n              src={clear}\r\n              onClick={handleClearInput}\r\n            />\r\n          )}\r\n        </DatePickerInputWrapper>\r\n        <CalendarWrapper ref={calendarRef}>\r\n          {isCalendarOpen && <Calendar />}\r\n        </CalendarWrapper>\r\n      </DatePickerContainer>\r\n    );\r\n  },\r\n);\r\n\r\nexport default DatePicker;\r\n","import styled, { DefaultTheme } from \"styled-components\";\r\n\r\nimport { Container } from \"constants/styles/global\";\r\n\r\nconst spaceM = ({ theme }: DefaultTheme) => theme.spaces.m;\r\n\r\nexport const RangeDatePickerWrapper = styled(Container)`\r\n  gap: ${spaceM}px;\r\n  flex-direction: row;\r\n`;\r\n","import React from \"react\";\r\n\r\nimport { useDate } from \"providers/DateProvider\";\r\n\r\nimport DatePicker from \"components/DatePicker\";\r\nimport ThemeWrapper from \"components/ThemeWrapper\";\r\n\r\nimport { formatDate } from \"utils/calendarDateData\";\r\n\r\nimport { RangeDatePickerPros } from \"./types\";\r\nimport { RANGE_FROM, RANGE_TO } from \"./config\";\r\nimport { RangeDatePickerWrapper } from \"./styled\";\r\n\r\nconst RangeDatePicker = React.memo(({ Calendar }: RangeDatePickerPros) => {\r\n  const { range } = useDate();\r\n\r\n  const rangeStart = range?.rangeStart ? formatDate(range.rangeStart) : \"\";\r\n  const rangeEnd = range?.rangeEnd ? formatDate(range.rangeEnd) : \"\";\r\n\r\n  return (\r\n    <ThemeWrapper>\r\n      <RangeDatePickerWrapper>\r\n        <DatePicker\r\n          Calendar={Calendar}\r\n          label={RANGE_FROM}\r\n          rangeValue={rangeStart}\r\n        />\r\n        <DatePicker\r\n          Calendar={Calendar}\r\n          label={RANGE_TO}\r\n          rangeValue={rangeEnd}\r\n        />\r\n      </RangeDatePickerWrapper>\r\n    </ThemeWrapper>\r\n  );\r\n});\r\n\r\nexport default RangeDatePicker;\r\n","export const RANGE_FROM = \"From\";\r\nexport const RANGE_TO = \"To\";\r\n","export const PLACEHOLDER: string = \"Coose Date\";\r\nexport const ERROR_MESSAGE: string = \"Enter Date in dd/mm/yyyy format\";\r\nexport const INVALID_DATE_MESSAGE: string = \"Invalid Date\";\r\nexport const SEPARATOR: string = \"/\";\r\n\r\nexport const DAY_LENGTH: number = 2;\r\nexport const DAY_SEPORATOR_MONTH_LENGTH: number = 5;\r\nexport const DATE_FORMAT_LENGTH: number = 10;\r\n\r\nexport const MAX_YEAR: number = 9999;\r\n\r\nexport const DATE_FORMAT_REGEX = /^[0-9/]*$/;\r\n","import styled from \"styled-components\";\r\n\r\nimport { BaseInput } from \"constants/styles/global\";\r\n\r\nexport const DateInput = styled(BaseInput)`\r\n  margin: 0;\r\n`;\r\n","import React, { useCallback } from \"react\";\r\n\r\nimport { useCalendar } from \"providers/CalendarProvider\";\r\n\r\nimport { DatePickerInputProps } from \"./types\";\r\nimport {\r\n  PLACEHOLDER,\r\n  ERROR_MESSAGE,\r\n  INVALID_DATE_MESSAGE,\r\n  DAY_LENGTH,\r\n  DAY_SEPORATOR_MONTH_LENGTH,\r\n  SEPARATOR,\r\n  DATE_FORMAT_LENGTH,\r\n  DATE_FORMAT_REGEX,\r\n  MAX_YEAR,\r\n} from \"./config\";\r\nimport { DateInput } from \"./styled\";\r\n\r\nconst DatePickerInput = React.memo((props: DatePickerInputProps) => {\r\n  const { inputValue, setInputValue, setError, setIsCalendarOpen } = props;\r\n\r\n  const { setSelectedDate, setSelectedMonth, setSelectedYear } = useCalendar();\r\n\r\n  const handleKeyDown = useCallback(\r\n    (e: React.KeyboardEvent<HTMLInputElement>) => {\r\n      setError(\"\");\r\n      if (e.key === \"Backspace\" && inputValue.endsWith(SEPARATOR)) {\r\n        setInputValue(inputValue.slice(0, -1));\r\n      }\r\n    },\r\n    [inputValue, setError, setInputValue],\r\n  );\r\n\r\n  const handleFocusInput = useCallback(() => {\r\n    setIsCalendarOpen(true);\r\n  }, []);\r\n\r\n  const handleInputChange = useCallback(\r\n    (e: React.ChangeEvent<HTMLInputElement>) => {\r\n      setError(\"\");\r\n      setIsCalendarOpen(true);\r\n      const value = e.target.value;\r\n\r\n      const validInput = DATE_FORMAT_REGEX.test(value);\r\n\r\n      if (!validInput) {\r\n        e.preventDefault();\r\n        setError(ERROR_MESSAGE);\r\n        return;\r\n      }\r\n\r\n      if (value.length >= DATE_FORMAT_LENGTH) {\r\n        setInputValue(value.substring(0, DATE_FORMAT_LENGTH));\r\n        const parts = value.split(SEPARATOR);\r\n        const day = parseInt(parts[0]);\r\n        const month = parseInt(parts[1]) - 1;\r\n        const year = parseInt(parts[2]);\r\n\r\n        if (year > MAX_YEAR) {\r\n          setError(ERROR_MESSAGE);\r\n          return;\r\n        }\r\n\r\n        const date = new Date(year, month, day);\r\n\r\n        if (\r\n          date.getDate() !== day ||\r\n          date.getMonth() !== month ||\r\n          date.getFullYear() !== year\r\n        ) {\r\n          setError(INVALID_DATE_MESSAGE);\r\n        } else {\r\n          setSelectedDate(date);\r\n          setSelectedMonth(month);\r\n          setSelectedYear(year);\r\n        }\r\n      }\r\n\r\n      if (value.length === DAY_LENGTH) {\r\n        setInputValue(value + SEPARATOR);\r\n      } else if (value.length === DAY_SEPORATOR_MONTH_LENGTH) {\r\n        setInputValue(value + SEPARATOR);\r\n      } else {\r\n        setInputValue(value);\r\n      }\r\n    },\r\n    [\r\n      setError,\r\n      setInputValue,\r\n      setIsCalendarOpen,\r\n      setSelectedDate,\r\n      setSelectedMonth,\r\n      setSelectedYear,\r\n    ],\r\n  );\r\n\r\n  return (\r\n    <DateInput\r\n      data-testid=\"date-picker-input\"\r\n      placeholder={PLACEHOLDER}\r\n      type=\"text\"\r\n      value={inputValue}\r\n      onChange={handleInputChange}\r\n      onFocus={handleFocusInput}\r\n      onKeyDown={handleKeyDown}\r\n    />\r\n  );\r\n});\r\n\r\nexport default DatePickerInput;\r\n","export const ERROR_TITLE: string = \"An error has occured\";\r\nexport const ERROR_TEXT: string = \"(╯°□°）╯︵ ┻━┻\";\r\n","import styled, { DefaultTheme } from \"styled-components\";\r\n\r\nimport { Container } from \"constants/styles/global\";\r\nimport { baseText } from \"constants/styles/mixins\";\r\n\r\nconst redColor = ({ theme }: DefaultTheme) => theme.colors.red;\r\n\r\nexport const ErrorBoundaryContainer = styled(Container)`\r\n  flex-direction: column;\r\n`;\r\n\r\nexport const Error = styled.p`\r\n  ${baseText}\r\n\r\n  color: ${redColor};\r\n`;\r\n\r\nexport const Text = styled.span`\r\n  ${baseText}\r\n\r\n  text-align: center;\r\n`;\r\n","import { Component, ReactNode, ErrorInfo } from \"react\";\r\n\r\nimport { Title } from \"constants/styles/global\";\r\n\r\nimport { ErrorBoundaryState } from \"./types\";\r\nimport { ERROR_TEXT, ERROR_TITLE } from \"./config\";\r\nimport { ErrorBoundaryContainer, Error, Text } from \"./styled\";\r\n\r\ninterface ErrorBoundaryProps {\r\n  children: ReactNode;\r\n}\r\n\r\nclass ErrorBoundary extends Component<ErrorBoundaryProps, ErrorBoundaryState> {\r\n  constructor(props: ErrorBoundaryProps) {\r\n    super(props);\r\n    this.state = {\r\n      hasError: false,\r\n      error: null,\r\n      errorInfo: null,\r\n    };\r\n  }\r\n\r\n  static getDerivedStateFromError(error: Error) {\r\n    return {\r\n      hasError: true,\r\n      error,\r\n    };\r\n  }\r\n\r\n  componentDidCatch(error: Error, errorInfo: ErrorInfo) {\r\n    this.setState({\r\n      errorInfo,\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const { hasError, error, errorInfo } = this.state;\r\n\r\n    if (hasError) {\r\n      return (\r\n        <ErrorBoundaryContainer data-testid=\"error-boundary\">\r\n          <Title>{ERROR_TITLE}</Title>\r\n          <Error>{error && error.toString()}</Error>\r\n          <Text>{ERROR_TEXT}</Text>\r\n          <Text>{errorInfo && errorInfo.componentStack}</Text>\r\n        </ErrorBoundaryContainer>\r\n      );\r\n    }\r\n\r\n    return this.props.children;\r\n  }\r\n}\r\n\r\nexport default ErrorBoundary;\r\n","export const PLACEHOLDER: string = \"Enter todo text\";\r\nexport const BUTTON_TEXT: string = \"Add task\";\r\n","import styled, { DefaultTheme } from \"styled-components\";\r\n\r\nimport { Button, Container } from \"constants/styles/global\";\r\n\r\nconst lightGrayColor = ({ theme }: DefaultTheme) => theme.colors.lightGray;\r\nconst darkBlueColor = ({ theme }: DefaultTheme) => theme.colors.darkBlue;\r\nconst whiteColor = ({ theme }: DefaultTheme) => theme.colors.white;\r\nconst spaceM = ({ theme }: DefaultTheme) => theme.spaces.m;\r\n\r\nexport const Wrapper = styled(Container)`\r\n  gap: ${spaceM}px;\r\n  width: 100%;\r\n`;\r\n\r\nexport const InputWrapper = styled(Container)`\r\n  border: 1px solid ${lightGrayColor};\r\n  margin: ${spaceM}px 0;\r\n  width: 100%;\r\n  justify-content: flex-start;\r\n  border-radius: 8px;\r\n`;\r\n\r\nexport const InputButton = styled(Button)`\r\n  background-color: ${darkBlueColor};\r\n  color: ${whiteColor};\r\n  width: 100px;\r\n  height: 40px;\r\n  border-radius: 8px;\r\n`;\r\n","import React, { ChangeEvent } from \"react\";\r\n\r\nimport { BaseInput } from \"constants/styles/global\";\r\n\r\nimport { TodoInputProps } from \"./types\";\r\nimport { BUTTON_TEXT, PLACEHOLDER } from \"./config\";\r\nimport { Wrapper, InputButton, InputWrapper } from \"./styled\";\r\n\r\nconst TodoInput = React.memo(\r\n  ({ todoText, onChange, onAddTask }: TodoInputProps) => {\r\n    const handleInputChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n      onChange(e);\r\n    };\r\n\r\n    const handleAddTodo = () => {\r\n      onAddTask();\r\n    };\r\n\r\n    const handleInputKeyDown = (e: React.KeyboardEvent<HTMLInputElement>) => {\r\n      if (e.key === \"Enter\") {\r\n        handleAddTodo();\r\n      }\r\n    };\r\n\r\n    return (\r\n      <Wrapper>\r\n        <InputWrapper>\r\n          <BaseInput\r\n            placeholder={PLACEHOLDER}\r\n            type=\"text\"\r\n            value={todoText}\r\n            onChange={handleInputChange}\r\n            onKeyDown={handleInputKeyDown}\r\n          />\r\n        </InputWrapper>\r\n        <InputButton onClick={handleAddTodo}>{BUTTON_TEXT}</InputButton>\r\n      </Wrapper>\r\n    );\r\n  },\r\n);\r\n\r\nexport default TodoInput;\r\n","import styled, { DefaultTheme } from \"styled-components\";\r\n\r\nimport { baseText } from \"constants/styles/mixins\";\r\nimport { Button, Container } from \"constants/styles/global\";\r\n\r\nimport { TodoItemStyledProps } from \"./types\";\r\n\r\nconst lightGrayColor = ({ theme }: DefaultTheme) => theme.colors.lightGray;\r\nconst redColor = ({ theme }: DefaultTheme) => theme.colors.red;\r\nconst spaceM = ({ theme }: DefaultTheme) => theme.spaces.m;\r\n\r\nexport const TodoWrapper = styled(Container)`\r\n  border: 1px solid ${lightGrayColor};\r\n  gap: ${spaceM}px;\r\n  padding: ${spaceM}px;\r\n  justify-content: flex-start;\r\n  width: 100%;\r\n  border-radius: 8px;\r\n`;\r\n\r\nexport const TodoText = styled.p<TodoItemStyledProps>`\r\n  ${baseText}\r\n\r\n  text-decoration: ${({ $isDone }) => ($isDone ? \"line-through\" : \"none\")};\r\n  width: 100%;\r\n  max-width: 433px;\r\n  word-wrap: break-word;\r\n`;\r\n\r\nexport const DeleteTaskButton = styled(Button)`\r\n  &:hover {\r\n    color: ${redColor};\r\n  }\r\n`;\r\n","import React, { useCallback } from \"react\";\r\n\r\nimport { useCalendar } from \"providers/CalendarProvider\";\r\n\r\nimport { getCache, saveCache } from \"utils/dataCaching\";\r\n\r\nimport { Todo } from \"../types\";\r\n\r\nimport { TodoItemProps } from \"./types\";\r\nimport { BUTTON_TEXT } from \"./config\";\r\nimport { DeleteTaskButton, TodoText, TodoWrapper } from \"./styled\";\r\n\r\nconst TodoItem = React.memo((props: TodoItemProps) => {\r\n  const { id, todoText, isDone, setTodos } = props;\r\n\r\n  const { selectedDate } = useCalendar();\r\n\r\n  const handleCheckboxChange = useCallback(() => {\r\n    const TODO_CACHE_KEY = selectedDate.toDateString();\r\n    const todos = getCache<Todo[]>(TODO_CACHE_KEY);\r\n\r\n    const updatedTodos = todos.map((todo: TodoItemProps) => {\r\n      if (todo.id === id) {\r\n        return { ...todo, isDone: !todo.isDone };\r\n      }\r\n\r\n      return todo;\r\n    });\r\n\r\n    setTodos(updatedTodos);\r\n    saveCache(TODO_CACHE_KEY, updatedTodos);\r\n  }, [id, selectedDate, setTodos]);\r\n\r\n  const handleDeleteTodo = useCallback(() => {\r\n    const TODO_CACHE_KEY = selectedDate.toDateString();\r\n    const todos = getCache<Todo[]>(TODO_CACHE_KEY);\r\n\r\n    const updatedTodos = todos.filter((todo: TodoItemProps) => todo.id !== id);\r\n\r\n    setTodos(updatedTodos);\r\n    saveCache(TODO_CACHE_KEY, updatedTodos);\r\n  }, [id, selectedDate, setTodos]);\r\n\r\n  return (\r\n    <TodoWrapper>\r\n      <input checked={isDone} type=\"checkbox\" onChange={handleCheckboxChange} />\r\n      <TodoText $isDone={isDone}>{todoText}</TodoText>\r\n      <DeleteTaskButton onClick={handleDeleteTodo}>\r\n        {BUTTON_TEXT}\r\n      </DeleteTaskButton>\r\n    </TodoWrapper>\r\n  );\r\n});\r\n\r\nexport default TodoItem;\r\n","export const BUTTON_TEXT: string = \"Delete\";\r\n","import styled, { DefaultTheme } from \"styled-components\";\r\n\r\nimport { Button, Container } from \"constants/styles/global\";\r\n\r\nconst spaceM = ({ theme }: DefaultTheme) => theme.spaces.m;\r\nconst grayColor = ({ theme }: DefaultTheme) => theme.colors.gray;\r\nconst lightGrayColor = ({ theme }: DefaultTheme) => theme.colors.lightGray;\r\nconst whiteColor = ({ theme }: DefaultTheme) => theme.colors.white;\r\n\r\nexport const ModalContainer = styled(Container)`\r\n  height: 100%;\r\n  width: 100%;\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n`;\r\n\r\nexport const ModalWindow = styled(Container)`\r\n  box-shadow: 0px 0px 13px 0px ${lightGrayColor};\r\n  background-color: ${whiteColor};\r\n  border: 1px solid ${grayColor};\r\n  padding: ${spaceM}px;\r\n  flex-direction: column;\r\n  width: 100%;\r\n  max-width: 550px;\r\n  height: fit-content;\r\n  position: relative;\r\n  border-radius: 10px;\r\n`;\r\n\r\nexport const CloseButton = styled(Button)`\r\n  align-self: flex-end;\r\n  transition: transform 0.3s;\r\n\r\n  &:hover {\r\n    transform: scale(1.15);\r\n  }\r\n`;\r\n","import React, { useRef } from \"react\";\r\n\r\nimport useClickOutside from \"hooks/useClickOutside\";\r\n\r\nimport { ICONS } from \"constants/icons\";\r\nimport { Icon } from \"constants/styles/global\";\r\n\r\nimport { ModalProps } from \"./types\";\r\nimport { CloseButton, ModalWindow, ModalContainer } from \"./styled\";\r\n\r\nconst { close } = ICONS;\r\n\r\nconst Modal = React.memo(({ children, onClose }: ModalProps) => {\r\n  const modalRef = useRef<HTMLDivElement | null>(null);\r\n\r\n  useClickOutside(modalRef, onClose);\r\n\r\n  const handleCloseButtonClick = () => {\r\n    onClose();\r\n  };\r\n\r\n  return (\r\n    <ModalContainer>\r\n      <ModalWindow ref={modalRef}>\r\n        <CloseButton\r\n          data-testid=\"modal-close-button\"\r\n          onClick={handleCloseButtonClick}\r\n        >\r\n          <Icon src={close} />\r\n        </CloseButton>\r\n        {children}\r\n      </ModalWindow>\r\n    </ModalContainer>\r\n  );\r\n});\r\n\r\nexport default Modal;\r\n","import styled, { DefaultTheme } from \"styled-components\";\r\n\r\nimport { Container } from \"constants/styles/global\";\r\n\r\nconst spaceM = ({ theme }: DefaultTheme) => theme.spaces.m;\r\n\r\nexport const TasksWrapper = styled(Container)`\r\n  gap: ${spaceM}px;\r\n  justify-content: flex-start;\r\n  flex-direction: column;\r\n  width: 100%;\r\n  max-height: 350px;\r\n  overflow: auto;\r\n`;\r\n","import React, { ChangeEvent, useCallback, useState, useEffect } from \"react\";\n\r\nimport { useCalendar } from \"providers/CalendarProvider\";\n\r\nimport { TodoInput, TodoItem } from \"components/index\";\r\nimport Modal from \"components/Modal\";\r\n\r\nimport { getCache, saveCache } from \"utils/dataCaching\";\r\n\r\nimport { Title } from \"constants/styles/global\";\r\n\r\nimport { Todo, TodosModalProps } from \"./types\";\r\nimport { HINT, TITLE_TEXT } from \"./config\";\r\nimport { TasksWrapper } from \"./styled\";\r\n\r\nconst TodosModal = React.memo(({ onClose }: TodosModalProps) => {\r\n  const [todoText, setTodoText] = useState<string>(\"\");\r\n  const [todos, setTodos] = useState<Todo[]>([]);\r\n\r\n  const { selectedDate } = useCalendar();\r\n\r\n  useEffect(() => {\r\n    const TODO_CACHE_KEY = selectedDate.toDateString();\r\n    const cachedTodos = getCache<Todo[]>(TODO_CACHE_KEY);\r\n\r\n    if (cachedTodos) {\r\n      setTodos(cachedTodos);\r\n    }\r\n  }, [selectedDate]);\r\n\r\n  const handleCloseModal = useCallback(() => {\r\n    onClose();\r\n  }, [onClose]);\r\n\r\n  const handleInputChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\r\n    setTodoText(e.target.value);\r\n  }, []);\r\n\r\n  const handleAddTodo = useCallback(() => {\r\n    if (todoText.trim() !== \"\") {\r\n      const TODO_CACHE_KEY = selectedDate.toDateString();\r\n      const existingTodos = [...todos];\r\n      const newTodo = {\r\n        id: String(new Date().getTime()),\r\n        todoText: todoText,\r\n        isDone: false,\r\n      };\r\n\r\n      existingTodos.push(newTodo);\r\n      setTodos(existingTodos);\r\n      saveCache(TODO_CACHE_KEY, existingTodos);\r\n\r\n      setTodoText(\"\");\r\n    }\r\n  }, [todoText, todos, selectedDate]);\r\n\r\n  const TODO_ITEMS = todos.map(({ id, ...todo }) => (\r\n    <TodoItem id={id} key={id} setTodos={setTodos} {...todo} />\r\n  ));\r\n\r\n  return (\r\n    <Modal data-testid=\"todo-modal\" onClose={handleCloseModal}>\r\n      <Title>{TITLE_TEXT.replace(\"{Date}\", selectedDate.toDateString())}</Title>\r\n      <TodoInput\r\n        todoText={todoText}\r\n        onAddTask={handleAddTodo}\r\n        onChange={handleInputChange}\r\n      />\r\n      <TasksWrapper>{todos.length !== 0 ? TODO_ITEMS : HINT}</TasksWrapper>\r\n    </Modal>\r\n  );\r\n});\r\n\r\nexport default TodosModal;\r\n","export const TITLE_TEXT = \"Todos for {Date}\";\r\nexport const HINT = \"Add some tasks\";\r\n","import styled, { DefaultTheme } from \"styled-components\";\r\n\r\nimport { Container } from \"constants/styles/global\";\r\n\r\nimport { CalendarStyledProps } from \"./types\";\r\n\r\nconst grayColor = ({ theme }: DefaultTheme) => theme.colors.gray;\r\nconst whiteColor = ({ theme }: DefaultTheme) => theme.colors.white;\r\n\r\nexport const CalendarContainer = styled(Container)<CalendarStyledProps>`\r\n  background-color: ${whiteColor};\r\n  border: 1px solid ${grayColor};\r\n  border-bottom: ${({ $isRangeExist, $isTodosEnabled }) =>\r\n    ($isRangeExist || $isTodosEnabled) && `none`};\r\n  border-radius: ${({ $isRangeExist, $isTodosEnabled }) =>\r\n    $isRangeExist || $isTodosEnabled ? `8px 8px 0 0` : \"8px\"};\r\n  padding: 10px;\r\n  flex-direction: column;\r\n`;\r\n","import { useCallback } from \"react\";\n\r\nimport { useDate } from \"providers/DateProvider\";\n\r\nimport {\r\n  GridSlider,\r\n  DayOfWeekGrid,\r\n  WeekdaysHeader,\r\n  Button,\r\n} from \"components/index\";\r\nimport ErrorBoundary from \"components/ErrorBoundary\";\r\nimport ThemeWrapper from \"components/ThemeWrapper\";\r\n\r\nimport { CALENDAR_TYPES, CalendarProps } from \"./types\";\r\nimport { CLEAR_BUTTON_TITLE } from \"./config\";\r\nimport { CalendarContainer } from \"./styled\";\r\n\r\nconst { Month, Week } = CALENDAR_TYPES;\r\n\r\nconst Calendar = (props: CalendarProps) => {\r\n  const {\r\n    type = Month,\r\n    isMondayFirst,\r\n    isWeekendDate,\r\n    isWithRange,\r\n    minDate,\r\n    maxDate,\r\n    isTodosEnabled,\r\n    isHolidayDate,\r\n  } = props;\r\n\r\n  const { range, setRange } = useDate();\r\n\r\n  const handlClearButtonClick = useCallback(() => {\r\n    if (setRange) {\r\n      setRange(undefined);\r\n    }\r\n  }, [setRange]);\r\n\r\n  const isRangeExist =\r\n    isWithRange && Boolean(range?.rangeStart) && Boolean(range?.rangeEnd);\r\n\r\n  return (\r\n    <ThemeWrapper>\r\n      <ErrorBoundary>\r\n        <CalendarContainer\r\n          $isRangeExist={isRangeExist}\r\n          $isTodosEnabled={isTodosEnabled}\r\n          data-testid=\"calendar\"\r\n        >\r\n          <GridSlider\r\n            isMondayFirst={isMondayFirst}\r\n            maxDate={maxDate}\r\n            minDate={minDate}\r\n            type={type}\r\n          />\r\n          {(type === Week || type === Month) && (\r\n            <WeekdaysHeader isMondayFirst={isMondayFirst} />\r\n          )}\r\n          <DayOfWeekGrid\r\n            isHolidayDate={isHolidayDate}\r\n            isMondayFirst={isMondayFirst}\r\n            isTodosEnabled={isTodosEnabled}\r\n            isWeekendDate={isWeekendDate}\r\n            isWithRange={isWithRange}\r\n            maxDate={maxDate}\r\n            minDate={minDate}\r\n            type={type}\r\n          />\r\n        </CalendarContainer>\r\n        {isRangeExist && (\r\n          <Button\r\n            $isTodosEnabled={isTodosEnabled}\r\n            title={CLEAR_BUTTON_TITLE}\r\n            onButtonClick={handlClearButtonClick}\r\n          />\r\n        )}\r\n      </ErrorBoundary>\r\n    </ThemeWrapper>\r\n  );\r\n};\r\n\r\nexport default Calendar;\r\n","export const CLEAR_BUTTON_TITLE: string = \"Clear Range\";\r\n","import React from \"react\";\r\n\r\nimport Calendar from \"components/Calendar\";\r\nimport { CalendarProps } from \"components/Calendar/types\";\r\n\r\nclass CalendarService {\r\n  private calendar: React.FC<CalendarProps>;\r\n\r\n  constructor() {\r\n    this.calendar = Calendar;\r\n  }\r\n\r\n  public addDecorator(\r\n    decorator: (calendar: React.FC<CalendarProps>) => React.FC<CalendarProps>,\r\n  ): void {\r\n    this.calendar = decorator(this.calendar);\r\n  }\r\n\r\n  public getCalendar(): React.FC<CalendarProps> {\r\n    return this.calendar;\r\n  }\r\n}\r\n\r\nexport default CalendarService;\r\n","import { ComponentType } from \"react\";\r\n\r\nimport { CalendarProps } from \"components/Calendar/types\";\r\n\r\nimport { isHolidayDate } from \"utils/calendarDateData\";\r\n\r\ninterface WithHolidaysProps extends Pick<CalendarProps, \"isHolidayDate\"> {}\r\n\r\nconst withHolidayDays = <T extends WithHolidaysProps>(\r\n  WrappedComponent: ComponentType<T>,\r\n) => {\r\n  const ComponentHolidaysDays = (props: Omit<T, keyof WithHolidaysProps>) => {\r\n    return <WrappedComponent {...(props as T)} isHolidayDate={isHolidayDate} />;\r\n  };\r\n\r\n  const displayName = WrappedComponent.displayName || WrappedComponent.name;\r\n  ComponentHolidaysDays.displayName = `withHolidays(${displayName})`;\r\n\r\n  return ComponentHolidaysDays;\r\n};\r\n\r\nexport default withHolidayDays;\r\n","import { ComponentType } from \"react\";\r\n\r\nimport { useDate } from \"providers/DateProvider\";\r\n\r\nimport { CalendarProps } from \"components/Calendar/types\";\r\n\r\ntype CalendarPropKeys = keyof CalendarProps;\r\n\r\ninterface WithMinAndMaxDateProps extends Pick<CalendarProps, CalendarPropKeys> {\r\n  minDate?: Date;\r\n  maxDate?: Date;\r\n}\r\n\r\nconst withMinAndMaxDate = <T extends WithMinAndMaxDateProps>(\r\n  WrappedComponent: ComponentType<T>,\r\n) => {\r\n  const ComponentMinAndMaxDate = (\r\n    props: Omit<T, keyof WithMinAndMaxDateProps>,\r\n  ) => {\r\n    const { minDate, maxDate } = useDate();\r\n\r\n    return (\r\n      <WrappedComponent {...(props as T)} maxDate={maxDate} minDate={minDate} />\r\n    );\r\n  };\r\n\r\n  const displayName = WrappedComponent.displayName || WrappedComponent.name;\r\n  ComponentMinAndMaxDate.displayName = `withRange(${displayName})`;\r\n\r\n  return ComponentMinAndMaxDate;\r\n};\r\n\r\nexport default withMinAndMaxDate;\r\n","import { ComponentType } from \"react\";\r\n\r\nimport { CalendarProps } from \"components/Calendar/types\";\r\n\r\ninterface WithMondayFirstProps extends Pick<CalendarProps, \"isMondayFirst\"> {}\r\n\r\nconst withMondayFirst = <T extends WithMondayFirstProps>(\r\n  WrappedComponent: ComponentType<T>,\r\n) => {\r\n  const ComponentWithMondayFirst = (\r\n    props: Omit<T, keyof WithMondayFirstProps>,\r\n  ) => {\r\n    return <WrappedComponent {...(props as T)} isMondayFirst={true} />;\r\n  };\r\n\r\n  const displayName = WrappedComponent.displayName || WrappedComponent.name;\r\n  ComponentWithMondayFirst.displayName = `withMondayFirst(${displayName})`;\r\n\r\n  return ComponentWithMondayFirst;\r\n};\r\n\r\nexport default withMondayFirst;\r\n","import { ComponentType } from \"react\";\r\n\r\nimport { CalendarProps } from \"components/Calendar/types\";\r\n\r\ninterface WithRangeProps extends Pick<CalendarProps, \"isWithRange\"> {}\r\n\r\nconst withRange = <T extends WithRangeProps>(\r\n  WrappedComponent: ComponentType<T>,\r\n) => {\r\n  const ComponentWithRange = (props: Omit<T, keyof WithRangeProps>) => {\r\n    return <WrappedComponent {...(props as T)} isWithRange={true} />;\r\n  };\r\n\r\n  const displayName = WrappedComponent.displayName || WrappedComponent.name;\r\n  ComponentWithRange.displayName = `withRange(${displayName})`;\r\n\r\n  return ComponentWithRange;\r\n};\r\n\r\nexport default withRange;\r\n","export const ADD_TASK_BUTTON_TITLE: string = \"Add Task\";\r\nexport const VIEW_TASK_BUTTON_TITLE: string = \"View Tasks\";\r\n","import { ComponentType, useCallback, useState } from \"react\";\n\r\nimport { useCalendar } from \"providers/CalendarProvider\";\n\r\nimport { Button, TodosModal } from \"components/index\";\r\nimport { CalendarProps } from \"components/Calendar/types\";\r\n\r\nimport usePortal from \"hooks/usePortal\";\r\n\r\nimport { getCache } from \"utils/dataCaching\";\r\n\r\nimport { ADD_TASK_BUTTON_TITLE, VIEW_TASK_BUTTON_TITLE } from \"./config\";\r\n\r\ninterface WithRangeProps extends Pick<CalendarProps, \"isTodosEnabled\"> {}\r\n\r\nconst withTodo = <T extends WithRangeProps>(\r\n  WrappedComponent: ComponentType<T>,\r\n) => {\r\n  const ComponentWithTodo = (props: Omit<T, keyof WithRangeProps>) => {\r\n    const [isTodoModalOpen, setIsTodoModalOpen] = useState(false);\r\n\r\n    const { selectedDate } = useCalendar();\r\n    const todosPortal = usePortal();\r\n\r\n    const handleOpenTodo = useCallback(() => {\r\n      setIsTodoModalOpen(true);\r\n    }, []);\r\n\r\n    const handleCloseTodoModal = useCallback(() => {\r\n      setIsTodoModalOpen(false);\r\n    }, []);\r\n\r\n    const todos = getCache(selectedDate.toDateString());\r\n    const isTodosExist = todos.length !== 0;\r\n\r\n    return (\r\n      <>\r\n        <WrappedComponent {...(props as T)} isTodosEnabled={true} />\r\n        <Button\r\n          title={isTodosExist ? VIEW_TASK_BUTTON_TITLE : ADD_TASK_BUTTON_TITLE}\r\n          onButtonClick={handleOpenTodo}\r\n        />\r\n        {isTodoModalOpen &&\r\n          todosPortal(<TodosModal onClose={handleCloseTodoModal} />)}\r\n      </>\r\n    );\r\n  };\r\n\r\n  const displayName = WrappedComponent.displayName || WrappedComponent.name;\r\n  ComponentWithTodo.displayName = `withTodo(${displayName})`;\r\n\r\n  return ComponentWithTodo;\r\n};\r\n\r\nexport default withTodo;\r\n","import { ReactNode, useEffect, useRef } from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nimport { DEFAULT_ID } from \"./config\";\r\n\r\nfunction usePortal(id = DEFAULT_ID) {\r\n  const portalContainerRef = useRef<HTMLElement | null>(null);\r\n\r\n  useEffect(() => {\r\n    let element = document.getElementById(id);\r\n    let elementCreated = false;\r\n\r\n    if (!element) {\r\n      elementCreated = true;\r\n      element = document.createElement(\"div\");\r\n      element.id = id;\r\n      document.body.appendChild(element);\r\n    }\r\n\r\n    portalContainerRef.current = element;\r\n\r\n    return () => {\r\n      if (elementCreated && element?.parentNode) {\r\n        element.parentNode.removeChild(element);\r\n      }\r\n    };\r\n  }, [id]);\r\n\r\n  const createPortal = (element: ReactNode) => {\r\n    if (portalContainerRef.current) {\r\n      return ReactDOM.createPortal(element, portalContainerRef.current);\r\n    }\r\n  };\r\n\r\n  return createPortal;\r\n}\r\n\r\nexport default usePortal;\r\n","export const DEFAULT_ID = \"todo-portal-wrapper\";\r\n","import { ComponentType } from \"react\";\r\n\r\nimport { CalendarProps } from \"components/Calendar/types\";\r\n\r\nimport { isWeekendDate } from \"utils/calendarDateData\";\r\n\r\ninterface WithWeekendsProps extends Pick<CalendarProps, \"isWeekendDate\"> {}\r\n\r\nconst withWeekendsDays = <T extends WithWeekendsProps>(\r\n  WrappedComponent: ComponentType<T>,\r\n) => {\r\n  const ComponentWeekendsDays = (props: Omit<T, keyof WithWeekendsProps>) => {\r\n    return <WrappedComponent {...(props as T)} isWeekendDate={isWeekendDate} />;\r\n  };\r\n\r\n  const displayName = WrappedComponent.displayName || WrappedComponent.name;\r\n  ComponentWeekendsDays.displayName = `withWeekendsDays(${displayName})`;\r\n\r\n  return ComponentWeekendsDays;\r\n};\r\n\r\nexport default withWeekendsDays;\r\n"],"names":["DateContext","createContext","minDate","Date","maxDate","range","undefined","setMinDate","setMaxDate","setRange","useDate","useContext","COLORS","white","black","gray","lightGray","darkBlueHover","darkBlue","blue","lightBlue","red","orange","FONTS","fontFamily","openSans","fontSize","xl","l","m","s","fontWeight","SPACES","THEME","colors","fonts","spaces","displayFlex","css","flexColumn","contentCenter","baseText","GlobalStyle","createGlobalStyle","Button","styled","button","Container","div","Icon","img","Title","h1","BaseInput","input","ThemeWrapper","children","_jsxs","_Fragment","_jsx","ThemeProvider","theme","grayColor","ButtonContainer","$isTodosEnabled","React","memo","title","onButtonClick","onClick","RANGE_STATE","WEEKDAYS","Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday","MONTH","MONTH_COUNT","HOLIDAYS","name","date","getFirstDayOfWeek","selectedDate","isMondayFirst","firstDay","dayOfWeek","getDay","daysToMonday","DAYS_IN_WEEK","setDate","getDate","isWeekendDate","isHolidayDate","some","holiday","getMonth","formatDate","toString","padStart","getFullYear","month","year","CalendarContext","firstDateOfWeek","selectedMonth","selectedYear","setFirstDateOfWeek","setSelectedDate","setSelectedMonth","setSelectedYear","useCalendar","getCache","cacheKey","cachedData","localStorage","getItem","JSON","parse","saveCache","cacheValue","setItem","stringify","Start","Between","End","darkBlueHoverColor","DayOfWeekButton","$isSelected","$rangeState","determineBackgroundColor","$isDisabled","$isWeekend","$isHoliday","determineTextColor","determineRadius","Dot","DayofWeek","props","isSelected","isDisabled","isWeekend","isWithRange","isTodosEnabled","isHoliday","day","handleSelectDate","useCallback","rangeStart","rangeEnd","start","rangeArr","todos","toDateString","getTime","getRangeState","length","isCurrentMonth","getDaysInMonth","isSelectedDay","getCalendarMonthData","monthNumber","totalDaysInMonth","monthFirstDay","getMonthFirstDay","daysFromPrevMonth","prevMonth","prevMonthYear","getPreviousMonth","nextMonth","nextMonthYear","getNextMonth","prevMonthDays","prevMonthDates","Array","from","_","i","currentMonthDates","remainingDays","daysToAdd","Math","ceil","MAX_CALENDAR_DAYS","nextMonthDates","newDate","filter","CALENDAR_TYPES","spaceM","DayOfWeekGridContainer","YearCalendarContainer","MiniCalendarWrapper","MonthText","p","Week","Month","Year","DayOfWeekGrid","type","GREED_DATA","useMemo","firstDayOfWeek","currentDate","getCalendarWeekData","YEAR_GREED_DATA","getCalendarYearData","map","DayOfWeek","currentMonth","WeekdaysHeader","ICONS","calendar","clear","close","nextGrid","prevGrid","NEXT_GRID","SliderContainer","SliderButton","GridSlider","useEffect","handleGridChange","direction","nextYear","nextFirstDate","nextDate","src","WeekdayContainer","Weekday","weekday","WEEKDAYS_ARRAY","days","Object","values","slice","useClickOutside","ref","handler","listener","event","current","contains","target","document","addEventListener","removeEventListener","spaceS","DatePickerContainer","Label","label","DatePickerInputWrapper","InfoContainer","Error","span","CalendarWrapper","DatePicker","rangeValue","Calendar","inputValue","setInputValue","useState","error","setError","isCalendarOpen","setIsCalendarOpen","calendarRef","useRef","handleCalendarIconClick","prevValue","handleClearInput","DatePickerInput","RangeDatePickerWrapper","ERROR_MESSAGE","SEPARATOR","DATE_FORMAT_REGEX","DateInput","handleKeyDown","e","key","endsWith","handleFocusInput","handleInputChange","value","test","preventDefault","substring","parts","split","parseInt","placeholder","onChange","onFocus","onKeyDown","DatePickerInput$1","ErrorBoundaryContainer","Text","ErrorBoundary","Component","constructor","super","this","state","hasError","errorInfo","getDerivedStateFromError","componentDidCatch","setState","render","componentStack","Wrapper","InputWrapper","InputButton","TodoInput","todoText","onAddTask","handleAddTodo","TodoWrapper","TodoText","$isDone","DeleteTaskButton","TodoItem","id","isDone","setTodos","handleCheckboxChange","TODO_CACHE_KEY","updatedTodos","todo","handleDeleteTodo","checked","ModalContainer","ModalWindow","CloseButton","Modal","onClose","modalRef","TasksWrapper","TodosModal","setTodoText","cachedTodos","handleCloseModal","trim","existingTodos","newTodo","String","push","TODO_ITEMS","replace","CalendarContainer","$isRangeExist","handlClearButtonClick","isRangeExist","Boolean","CalendarService","addDecorator","decorator","getCalendar","withHolidayDays","WrappedComponent","ComponentHolidaysDays","displayName","withMinAndMaxDate","ComponentMinAndMaxDate","withMondayFirst","ComponentWithMondayFirst","withRange","ComponentWithRange","withTodo","ComponentWithTodo","isTodoModalOpen","setIsTodoModalOpen","todosPortal","portalContainerRef","element","getElementById","elementCreated","createElement","body","appendChild","parentNode","removeChild","ReactDOM","createPortal","usePortal","handleOpenTodo","handleCloseTodoModal","isTodosExist","withWeekendsDays","ComponentWeekendsDays"],"mappings":"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"}