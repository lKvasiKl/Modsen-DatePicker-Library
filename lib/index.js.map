{"version":3,"file":"index.js","sources":["../src/providers/DateProvider.tsx","../src/constants/styles/colors.ts","../src/constants/styles/fonts.ts","../src/constants/styles/spaces.ts","../src/constants/theme.ts","../src/constants/styles/mixins.ts","../src/constants/styles/global.ts","../src/components/ThemeWrapper/index.tsx","../src/components/Calendar/Button/styled.ts","../src/components/Calendar/Button/index.tsx","../src/constants/calendarData.ts","../src/constants/holidays.ts","../src/utils/calendarDateData.ts","../src/providers/CalendarProvider.tsx","../src/utils/dataCaching.ts","../src/utils/borderRadiusCalculator.ts","../src/utils/colorCalculator.ts","../src/components/Calendar/DayOfWeek/styled.ts","../src/components/Calendar/DayOfWeek/index.tsx","../src/utils/calendarMonthData.ts","../src/utils/calendarData.ts","../src/components/Calendar/types.ts","../src/components/Calendar/DayOfWeekGrid/styled.ts","../src/components/Calendar/DayOfWeekGrid/index.tsx","../src/constants/icons.ts","../src/assets/icons/calendar.svg","../src/assets/icons/clear.svg","../src/assets/icons/close.svg","../src/assets/icons/next.svg","../src/assets/icons/prev.svg","../src/components/Calendar/GridSlider/types.ts","../src/components/Calendar/GridSlider/styled.ts","../src/components/Calendar/GridSlider/index.tsx","../src/components/Calendar/Weekday/styled.ts","../src/components/Calendar/Weekday/index.tsx","../src/components/Calendar/WeekdaysHeader/index.tsx","../src/hooks/useClickOutside.ts","../src/components/DatePicker/styled.ts","../src/components/DatePicker/index.tsx","../src/components/RangeDatePicker/styled.ts","../src/components/RangeDatePicker/index.tsx","../src/components/RangeDatePicker/config.ts","../src/components/DatePicker/DatePickerInput/config.ts","../src/components/DatePicker/DatePickerInput/styled.ts","../src/components/DatePicker/DatePickerInput/index.tsx","../src/components/ErrorBoundary/config.ts","../src/components/ErrorBoundary/styled.ts","../src/components/ErrorBoundary/index.tsx","../src/components/TodosModal/TodoInput/config.ts","../src/components/TodosModal/TodoInput/styled.ts","../src/components/TodosModal/TodoInput/index.tsx","../src/components/TodosModal/TodoItem/styled.ts","../src/components/TodosModal/TodoItem/index.tsx","../src/components/TodosModal/TodoItem/config.ts","../src/components/Modal/styled.ts","../src/components/Modal/index.tsx","../src/components/TodosModal/styled.ts","../src/components/TodosModal/index.tsx","../src/components/TodosModal/config.ts","../src/components/Calendar/styled.ts","../src/components/Calendar/index.tsx","../src/components/Calendar/config.ts","../src/decorators/index.tsx","../src/decorators/withHolidays/index.tsx","../src/decorators/withMondayFirst/index.tsx","../src/decorators/withRange/index.tsx","../src/decorators/withTodos/index.tsx","../src/hooks/usePortal.ts","../src/hooks/config.ts","../src/decorators/withTodos/config.ts","../src/decorators/withWeekends/index.tsx"],"sourcesContent":["import React, { createContext, useState, useContext } from \"react\";\r\n\r\nimport {\r\n  ProviderProps,\r\n  RangeValues,\r\n  DispatchDate,\r\n  DispatchRangeValues,\r\n} from \"./type\";\r\n\r\nconst defaultMinDate = new Date(2022, 0, 1);\r\nconst defaultMaxDate = new Date(2035, 11, 0);\r\n\r\nexport const DateContext = createContext<{\r\n  minDate: Date;\r\n  maxDate: Date;\r\n  range: RangeValues;\r\n  setMinDate: DispatchDate;\r\n  setMaxDate: DispatchDate;\r\n  setRange: DispatchRangeValues;\r\n}>({\r\n  minDate: defaultMinDate,\r\n  maxDate: defaultMaxDate,\r\n  range: undefined,\r\n  setMinDate: () => undefined,\r\n  setMaxDate: () => undefined,\r\n  setRange: () => undefined,\r\n});\r\n\r\nconst DateProvider = ({ children }: ProviderProps) => {\r\n  const [minDate, setMinDate] = useState(defaultMinDate);\r\n  const [maxDate, setMaxDate] = useState(defaultMaxDate);\r\n  const [range, setRange] = useState<RangeValues>({\r\n    rangeStart: undefined,\r\n    rangeEnd: undefined,\r\n  });\r\n\r\n  const value = {\r\n    minDate,\r\n    maxDate,\r\n    range,\r\n    setMinDate,\r\n    setMaxDate,\r\n    setRange,\r\n  };\r\n\r\n  return <DateContext.Provider value={value}>{children}</DateContext.Provider>;\r\n};\r\n\r\nconst useDate = () => {\r\n  return useContext(DateContext);\r\n};\r\n\r\nexport { DateProvider, useDate };\r\n","import { Colors } from \"constants/types\";\r\n\r\nexport const COLORS: Colors = {\r\n  white: \"#ffffff\",\r\n  black: \"#333333\",\r\n  gray: \"#f1f1f1\",\r\n  lightGray: \"#aaaaaa\",\r\n  darkBlueHover: \"#5185cb\",\r\n  darkBlue: \"#2f80ed\",\r\n  blue: \"#2f80ed99\",\r\n  lightBlue: \"#2f80ed1a\",\r\n  red: \"#b91414\",\r\n  orange: \"#f97e00\",\r\n};\r\n","import { Fonts } from \"constants/types\";\r\n\r\nexport const FONTS: Fonts = {\r\n  fontFamily: { openSans: \"Open Sans\" },\r\n  fontSize: {\r\n    xl: 20,\r\n    l: 15,\r\n    m: 14,\r\n    s: 13,\r\n  },\r\n  fontWeight: {\r\n    l: 700,\r\n    m: 600,\r\n    s: 400,\r\n  },\r\n};\r\n","import { Spaces } from \"constants/types\";\r\n\r\nexport const SPACES: Spaces = {\r\n  l: 16,\r\n  m: 8,\r\n  s: 4,\r\n};\r\n","import { COLORS, FONTS, SPACES } from \"constants/styles\";\r\n\r\nimport { Theme } from \"./types\";\r\n\r\nexport const THEME: Theme = {\r\n  colors: {\r\n    ...COLORS,\r\n  },\r\n  fonts: {\r\n    ...FONTS,\r\n  },\r\n  spaces: {\r\n    ...SPACES,\r\n  },\r\n};\r\n","import { css } from \"styled-components\";\r\n\r\nimport { FONTS } from \"./fonts\";\r\n\r\nexport const displayFlex = css`\r\n  display: flex;\r\n`;\r\n\r\nexport const flexColumn = css`\r\n  ${displayFlex}\r\n\r\n  flex-direction: column;\r\n`;\r\n\r\nexport const contentCenter = css`\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nexport const baseText = css`\r\n  font-size: ${FONTS.fontSize.s}px;\r\n  font-weight: ${FONTS.fontWeight.m};\r\n  font-style: normal;\r\n  line-height: normal;\r\n`;\r\n","import styled, { createGlobalStyle } from \"styled-components\";\r\n\r\nimport { FONTS } from \"./fonts\";\r\nimport { baseText, contentCenter, displayFlex, flexColumn } from \"./mixins\";\r\nimport { SPACES } from \"./spaces\";\r\n\r\nexport const GlobalStyle = createGlobalStyle`\r\n    * {\r\n        font-family: ${FONTS.fontFamily.openSans};\r\n        box-sizing: border-box;\r\n        user-select: none;\r\n        text-decoration: none;\r\n        list-style: none;\r\n        outline: none;\r\n        margin: 0;\r\n        padding: 0;\r\n    }\r\n`;\r\n\r\nexport const Button = styled.button`\r\n  ${flexColumn}\r\n  ${contentCenter}\r\n  ${baseText}\r\n  \r\n  background: transparent;\r\n  border: none;\r\n  cursor: pointer;\r\n`;\r\n\r\nexport const Container = styled.div`\r\n  ${displayFlex}\r\n  ${contentCenter}\r\n  \r\n  cursor: default;\r\n`;\r\n\r\nexport const Icon = styled.img`\r\n  width: 16px;\r\n  height: 16px;\r\n  cursor: pointer;\r\n`;\r\n\r\nexport const Title = styled.h1`\r\n  ${baseText}\r\n\r\n  font-size:  ${FONTS.fontSize.xl}px;\r\n  font-weight: ${FONTS.fontWeight.l};\r\n`;\r\n\r\nexport const BaseInput = styled.input`\r\n  ${baseText}\r\n\r\n  margin: ${SPACES.m}px;\r\n  font-size: ${FONTS.fontSize.l}px;\r\n  font-weight: ${FONTS.fontWeight.s};\r\n  width: 100%;\r\n  border: none;\r\n  background: transparent;\r\n`;\r\n","import { ThemeProvider } from \"styled-components\";\r\n\r\nimport { THEME } from \"constants/theme\";\r\nimport { GlobalStyle } from \"constants/styles/global\";\r\n\r\nimport { ThemeWrapperProps } from \"./types\";\r\n\r\nconst ThemeWrapper = ({ children }: ThemeWrapperProps) => (\r\n  <>\r\n    <GlobalStyle />\r\n    <ThemeProvider theme={THEME}>{children}</ThemeProvider>\r\n  </>\r\n);\r\n\r\nexport default ThemeWrapper;\r\n","import styled, { DefaultTheme } from \"styled-components\";\r\n\r\nimport { Button } from \"constants/styles/global\";\r\nimport { baseText } from \"constants/styles/mixins\";\r\n\r\nimport { ButtonStyledProps } from \"./types\";\r\n\r\nconst spaceS = ({ theme }: DefaultTheme) => theme.spaces.s;\r\nconst grayColor = ({ theme }: DefaultTheme) => theme.colors.gray;\r\nconst whiteColor = ({ theme }: DefaultTheme) => theme.colors.white;\r\n\r\nexport const ButtonContainer = styled(Button)<ButtonStyledProps>`\r\n  ${baseText}\r\n\r\n  padding: ${spaceS}px 0;\r\n  border: 1px solid ${grayColor};\r\n  background-color: ${whiteColor};\r\n  border-bottom: ${({ $isTodosEnabled }) => $isTodosEnabled && `none`};\r\n  border-radius: ${({ $isTodosEnabled }) =>\r\n    $isTodosEnabled ? \"0\" : \"0 0 8px 8px\"};\r\n  min-width: 246px;\r\n  justify-content: space-between;\r\n\r\n  &:hover {\r\n    background-color: ${grayColor};\r\n  }\r\n`;\r\n","import React from \"react\";\r\n\r\nimport { ButtonProps } from \"./types\";\r\nimport { ButtonContainer } from \"./styled\";\r\n\r\nconst Button = React.memo(\r\n  ({ title, onButtonClick, $isTodosEnabled }: ButtonProps) => {\r\n    return (\r\n      <ButtonContainer\r\n        $isTodosEnabled={$isTodosEnabled}\r\n        data-testid=\"calendar-button\"\r\n        onClick={onButtonClick}\r\n      >\r\n        {title}\r\n      </ButtonContainer>\r\n    );\r\n  },\r\n);\r\n\r\nexport default Button;\r\n","import { Weekday } from \"./types\";\r\n\r\nexport enum RANGE_STATE {\r\n  Start = \"Start\",\r\n  Between = \"Between\",\r\n  End = \"End\",\r\n}\r\n\r\nexport const WEEKDAYS: Weekday = {\r\n  Sunday: \"Su\",\r\n  Monday: \"Mo\",\r\n  Tuesday: \"Tu\",\r\n  Wednesday: \"We\",\r\n  Thursday: \"Th\",\r\n  Friday: \"Fr\",\r\n  Saturday: \"Sa\",\r\n};\r\n\r\nexport enum MONTH {\r\n  January,\r\n  February,\r\n  March,\r\n  April,\r\n  May,\r\n  June,\r\n  July,\r\n  August,\r\n  September,\r\n  October,\r\n  November,\r\n  December,\r\n}\r\n\r\nexport const DAYS_IN_WEEK = 7;\r\nexport const MIN_CALENDAR_DAYS = 35;\r\nexport const MAX_CALENDAR_DAYS = 42;\r\nexport const MONTH_COUNT = 12;\r\nexport const DATE_UNIT = 1;\r\n","export const HOLIDAYS = [\r\n  {\r\n    name: \"New Year's Day\",\r\n    date: new Date(\"2022-01-01\"),\r\n  },\r\n  {\r\n    name: \"Orthodox Christmas Eve\",\r\n    date: new Date(\"2022-01-06\"),\r\n  },\r\n  {\r\n    name: \"Orthodox Christmas Day\",\r\n    date: new Date(\"2022-01-07\"),\r\n  },\r\n  {\r\n    name: \"Defender of the Fatherland Day\",\r\n    date: new Date(\"2022-02-23\"),\r\n  },\r\n  {\r\n    name: \"International Women's Day\",\r\n    date: new Date(\"2022-03-08\"),\r\n  },\r\n  {\r\n    name: \"March Equinox\",\r\n    date: new Date(\"2022-03-20\"),\r\n  },\r\n  {\r\n    name: \"International Labor Day\",\r\n    date: new Date(\"2022-05-01\"),\r\n  },\r\n  {\r\n    name: \"Commemoration Day\",\r\n    date: new Date(\"2022-05-03\"),\r\n  },\r\n  {\r\n    name: \"Victory Day\",\r\n    date: new Date(\"2022-05-09\"),\r\n  },\r\n  {\r\n    name: \"June Solstice\",\r\n    date: new Date(\"2022-06-21\"),\r\n  },\r\n  {\r\n    name: \"Independence Day\",\r\n    date: new Date(\"2022-07-03\"),\r\n  },\r\n  {\r\n    name: \"September Equinox\",\r\n    date: new Date(\"2022-09-03\"),\r\n  },\r\n  {\r\n    name: \"Mother's Day\",\r\n    date: new Date(\"2022-10-14\"),\r\n  },\r\n  {\r\n    name: \"October Revolution Day\",\r\n    date: new Date(\"2022-11-07\"),\r\n  },\r\n  {\r\n    name: \"Christmas Eve\",\r\n    date: new Date(\"2022-12-24\"),\r\n  },\r\n  {\r\n    name: \"Christmas Day\",\r\n    date: new Date(\"2022-12-25\"),\r\n  },\r\n  {\r\n    name: \"New Year's Eve\",\r\n    date: new Date(\"2022-12-31\"),\r\n  },\r\n];\r\n","import { DATE_UNIT, DAYS_IN_WEEK } from \"constants/calendarData\";\r\nimport { HOLIDAYS } from \"constants/holidays\";\r\n\r\nexport const getFirstDayOfWeek = (\r\n  selectedDate: Date,\r\n  isMondayFirst = false,\r\n) => {\r\n  const firstDay = new Date(selectedDate);\r\n\r\n  if (isMondayFirst) {\r\n    const dayOfWeek = firstDay.getDay();\r\n    const daysToMonday =\r\n      dayOfWeek === 0 ? DAYS_IN_WEEK - DATE_UNIT : dayOfWeek - DATE_UNIT;\r\n    firstDay.setDate(firstDay.getDate() - daysToMonday);\r\n  } else {\r\n    firstDay.setDate(firstDay.getDate() - firstDay.getDay());\r\n  }\r\n\r\n  return firstDay;\r\n};\r\n\r\nexport const isWeekendDate = (date: Date): boolean => {\r\n  return date.getDay() === 0 || date.getDay() === DAYS_IN_WEEK - DATE_UNIT;\r\n};\r\n\r\nexport const isHolidayDate = (date: Date): boolean => {\r\n  return HOLIDAYS.some(\r\n    (holiday) =>\r\n      date.getDate() === holiday.date.getDate() &&\r\n      date.getMonth() === holiday.date.getMonth(),\r\n  );\r\n};\r\n\r\nexport const formatDate = (date: Date): string => {\r\n  const day = date.getDate().toString().padStart(2, \"0\");\r\n  const month = (date.getMonth() + DATE_UNIT).toString().padStart(2, \"0\");\r\n  const year = date.getFullYear().toString();\r\n\r\n  return `${day}/${month}/${year}`;\r\n};\r\n","import { createContext, useState, useContext } from \"react\";\r\n\r\nimport { getFirstDayOfWeek } from \"utils/calendarDateData\";\r\n\r\nimport { DispatchDate, DispatchNumber, ProviderProps } from \"./type\";\r\n\r\nconst date = new Date();\r\nconst month = date.getMonth();\r\nconst year = date.getFullYear();\r\nconst firstDayOfWeek = getFirstDayOfWeek(date);\r\n\r\nexport const CalendarContext = createContext<{\r\n  firstDateOfWeek: Date;\r\n  selectedDate: Date;\r\n  selectedMonth: number;\r\n  selectedYear: number;\r\n  setFirstDateOfWeek: DispatchDate;\r\n  setSelectedDate: DispatchDate;\r\n  setSelectedMonth: DispatchNumber;\r\n  setSelectedYear: DispatchNumber;\r\n}>({\r\n  firstDateOfWeek: firstDayOfWeek,\r\n  selectedDate: date,\r\n  selectedMonth: month,\r\n  selectedYear: year,\r\n  setFirstDateOfWeek: () => undefined,\r\n  setSelectedDate: () => undefined,\r\n  setSelectedMonth: () => undefined,\r\n  setSelectedYear: () => undefined,\r\n});\r\n\r\nconst CalendarProvider = ({ children }: ProviderProps) => {\r\n  const [firstDateOfWeek, setFirstDateOfWeek] = useState(firstDayOfWeek);\r\n  const [selectedDate, setSelectedDate] = useState(date);\r\n  const [selectedMonth, setSelectedMonth] = useState(month);\r\n  const [selectedYear, setSelectedYear] = useState(year);\r\n\r\n  const value = {\r\n    firstDateOfWeek,\r\n    selectedDate,\r\n    selectedMonth,\r\n    selectedYear,\r\n    setSelectedDate,\r\n    setSelectedMonth,\r\n    setSelectedYear,\r\n    setFirstDateOfWeek,\r\n  };\r\n\r\n  return (\r\n    <CalendarContext.Provider value={value}>\r\n      {children}\r\n    </CalendarContext.Provider>\r\n  );\r\n};\r\n\r\nconst useCalendar = () => {\r\n  return useContext(CalendarContext);\r\n};\r\n\r\nexport { CalendarProvider, useCalendar };\r\n","function getCache<T>(cacheKey: string): [] {\r\n  const cachedData = localStorage.getItem(cacheKey);\r\n\r\n  return cachedData ? JSON.parse(cachedData) : ([] as T);\r\n}\r\n\r\nfunction saveCache(cacheKey: string, cacheValue: unknown) {\r\n  localStorage.setItem(cacheKey, JSON.stringify(cacheValue));\r\n}\r\n\r\nfunction removeCache(cacheKey: string) {\r\n  localStorage.removeItem(cacheKey);\r\n}\r\n\r\nexport { getCache, saveCache, removeCache };\r\n","import { RANGE_STATE } from \"constants/calendarData\";\r\n\r\nconst { Start, Between, End } = RANGE_STATE;\r\n\r\nexport const determineRadius = ($rangeState?: RANGE_STATE) => {\r\n  switch ($rangeState) {\r\n    case Start: {\r\n      return \"8px 0 0 8px\";\r\n    }\r\n    case Between: {\r\n      return \"0\";\r\n    }\r\n    case End: {\r\n      return \"0 8px 8px 0\";\r\n    }\r\n    default: {\r\n      return \"8px\";\r\n    }\r\n  }\r\n};\r\n","import { RANGE_STATE } from \"constants/calendarData\";\r\nimport { COLORS } from \"constants/styles\";\r\n\r\nconst { Start, Between, End } = RANGE_STATE;\r\nconst { darkBlue, blue, lightBlue, white, orange, lightGray, red, black } =\r\n  COLORS;\r\n\r\nexport const determineBackgroundColor = (\r\n  $isSelected: boolean,\r\n  $rangeState: RANGE_STATE | undefined,\r\n): string => {\r\n  if ($isSelected || $rangeState === End) return darkBlue;\r\n  if ($rangeState === Start) return blue;\r\n  if ($rangeState === Between) return lightBlue;\r\n\r\n  return white;\r\n};\r\n\r\nexport const determineTextColor = (\r\n  $isSelected: boolean,\r\n  $isDisabled: boolean,\r\n  $isWeekend: boolean,\r\n  $rangeState: RANGE_STATE | undefined,\r\n  $isHoliday: boolean,\r\n): string => {\r\n  if ($isSelected || $rangeState === Start || $rangeState === End) return white;\r\n  if ($isHoliday) return orange;\r\n  if ($rangeState === Between) return darkBlue;\r\n  if ($isDisabled) return lightGray;\r\n  if ($isWeekend) return red;\r\n\r\n  return black;\r\n};\r\n","import styled, { DefaultTheme } from \"styled-components\";\r\n\r\nimport { determineRadius } from \"utils/borderRadiusCalculator\";\r\nimport {\r\n  determineBackgroundColor,\r\n  determineTextColor,\r\n} from \"utils/colorCalculator\";\r\n\r\nimport { Button } from \"constants/styles/global\";\r\n\r\nimport { DayOfWeekStyleProps } from \"./types\";\r\n\r\nconst grayColor = ({ theme }: DefaultTheme) => theme.colors.gray;\r\nconst darkBlueHoverColor = ({ theme }: DefaultTheme) =>\r\n  theme.colors.darkBlueHover;\r\nconst orangeColor = ({ theme }: DefaultTheme) => theme.colors.orange;\r\nconst spaceM = ({ theme }: DefaultTheme) => theme.spaces.m;\r\n\r\nexport const DayOfWeekButton = styled(Button)<DayOfWeekStyleProps>`\r\n  background-color: ${({ $isSelected, $rangeState }) =>\r\n    determineBackgroundColor($isSelected, $rangeState)};\r\n  color: ${({\r\n    $isSelected,\r\n    $isDisabled,\r\n    $isWeekend,\r\n    $rangeState,\r\n    $isHoliday,\r\n  }) =>\r\n    determineTextColor(\r\n      $isSelected,\r\n      $isDisabled,\r\n      $isWeekend,\r\n      $rangeState,\r\n      $isHoliday,\r\n    )};\r\n  padding: ${spaceM}px;\r\n  border-radius: ${({ $rangeState }) => determineRadius($rangeState)};\r\n  width: 32px;\r\n  height: 38px;\r\n\r\n  &:hover {\r\n    background-color: ${({ $isSelected }) =>\r\n      $isSelected ? darkBlueHoverColor : grayColor};\r\n  }\r\n`;\r\n\r\nexport const Dot = styled.div`\r\n  background-color: ${orangeColor};\r\n  width: 3px;\r\n  height: 3px;\r\n  border-radius: 50%;\r\n`;\r\n","import React, { useCallback } from \"react\";\r\n\r\nimport { useCalendar } from \"providers/CalendarProvider\";\r\nimport { useDate } from \"providers/DateProvider\";\r\n\r\nimport { getCache } from \"utils/dataCaching\";\r\n\r\nimport { RANGE_STATE } from \"constants/calendarData\";\r\n\r\nimport { DayOfWeekProps } from \"./types\";\r\nimport { DayOfWeekButton, Dot } from \"./styled\";\r\n\r\nconst { Start, End, Between } = RANGE_STATE;\r\n\r\nconst DayofWeek = React.memo((props: DayOfWeekProps) => {\r\n  const {\r\n    dayOfWeek,\r\n    isSelected = false,\r\n    isDisabled = false,\r\n    isWeekend = false,\r\n    isWithRange = false,\r\n    minDate = undefined,\r\n    maxDate = undefined,\r\n    isTodosEnabled = false,\r\n    isHoliday = false,\r\n  } = props;\r\n\r\n  const { range, setRange } = useDate();\r\n  const { setSelectedDate, setSelectedMonth, setSelectedYear } = useCalendar();\r\n\r\n  const day = dayOfWeek.getDate();\r\n  const month = dayOfWeek.getMonth();\r\n  const year = dayOfWeek.getFullYear();\r\n\r\n  const handleSelectDate = useCallback(() => {\r\n    const canChangeMonth =\r\n      (!minDate || dayOfWeek >= minDate) && (!maxDate || dayOfWeek <= maxDate);\r\n\r\n    if (canChangeMonth) {\r\n      setSelectedDate(dayOfWeek);\r\n      setSelectedMonth(month);\r\n      setSelectedYear(year);\r\n\r\n      if (isWithRange) {\r\n        if (!range || (!range.rangeStart && !range.rangeEnd)) {\r\n          setRange({ rangeStart: dayOfWeek, rangeEnd: undefined });\r\n        } else {\r\n          const start =\r\n            range && range.rangeStart ? range.rangeStart : dayOfWeek;\r\n          const rangeArr =\r\n            dayOfWeek < start ? [dayOfWeek, start] : [start, dayOfWeek];\r\n\r\n          setRange({ rangeStart: rangeArr[0], rangeEnd: rangeArr[1] });\r\n        }\r\n      }\r\n    }\r\n  }, [\r\n    minDate,\r\n    dayOfWeek,\r\n    maxDate,\r\n    setSelectedDate,\r\n    setSelectedMonth,\r\n    month,\r\n    setSelectedYear,\r\n    year,\r\n    isWithRange,\r\n    range,\r\n    setRange,\r\n  ]);\r\n\r\n  const getRangeState = (date: Date) => {\r\n    if (range && range.rangeStart) {\r\n      if (date.getTime() === range.rangeStart.getTime()) {\r\n        return Start;\r\n      }\r\n\r\n      if (range.rangeEnd && date.getTime() === range.rangeEnd.getTime()) {\r\n        return End;\r\n      }\r\n\r\n      if (range.rangeEnd && date > range.rangeStart && date < range.rangeEnd) {\r\n        return Between;\r\n      }\r\n    }\r\n  };\r\n\r\n  const todos = getCache(dayOfWeek.toDateString());\r\n\r\n  return (\r\n    <>\r\n      <DayOfWeekButton\r\n        $isDisabled={isDisabled}\r\n        $isHoliday={isHoliday}\r\n        $isSelected={isSelected}\r\n        $isWeekend={isWeekend}\r\n        $rangeState={getRangeState(dayOfWeek)}\r\n        data-testid=\"day-of-week\"\r\n        onClick={handleSelectDate}\r\n      >\r\n        {day}\r\n        {isTodosEnabled && todos.length !== 0 && <Dot />}\r\n      </DayOfWeekButton>\r\n    </>\r\n  );\r\n});\r\n\r\nexport default DayofWeek;\r\n","import { DATE_UNIT, MONTH, MONTH_COUNT } from \"constants/calendarData\";\r\n\r\nexport const isCurrentMonth = (date: Date, selectedMonth: number) => {\r\n  return date.getMonth() !== selectedMonth;\r\n};\r\n\r\nexport const getPreviousMonth = (month: number, year: number) => {\r\n  if (month === 0) {\r\n    return { month: MONTH_COUNT - DATE_UNIT, year: year - DATE_UNIT };\r\n  } else {\r\n    return { month: month - DATE_UNIT, year };\r\n  }\r\n};\r\n\r\nexport const getNextMonth = (month: number, year: number) => {\r\n  if (month === MONTH_COUNT - DATE_UNIT) {\r\n    return { month: 0, year: year + DATE_UNIT };\r\n  } else {\r\n    return { month: month + DATE_UNIT, year };\r\n  }\r\n};\r\n\r\nexport const getDaysInMonth = (year: number, month: number) => {\r\n  const date = new Date(year, month + DATE_UNIT, 0);\r\n\r\n  return date.getDate();\r\n};\r\n\r\nexport function getMonthFirstDay(year: number, month: number) {\r\n  const firstDayOfMonth = new Date(year, month, 1);\r\n  const dayOfWeek = firstDayOfMonth.getDay();\r\n\r\n  return dayOfWeek;\r\n}\r\n\r\nexport const getLastDayOfPreviousMonth = (currentDate: Date) => {\r\n  let year = currentDate.getFullYear();\r\n  const month = currentDate.getMonth();\r\n\r\n  let prevMonth = month - DATE_UNIT;\r\n\r\n  if (prevMonth === -1) {\r\n    prevMonth = MONTH.December;\r\n    year--;\r\n  }\r\n\r\n  const lastDayOfPreviousMonth = new Date(year, prevMonth, 0);\r\n\r\n  return lastDayOfPreviousMonth;\r\n};\r\n","import {\r\n  DATE_UNIT,\r\n  DAYS_IN_WEEK,\r\n  MAX_CALENDAR_DAYS,\r\n  MONTH_COUNT,\r\n} from \"constants/calendarData\";\r\n\r\nimport {\r\n  getDaysInMonth,\r\n  getMonthFirstDay,\r\n  getNextMonth,\r\n  getPreviousMonth,\r\n} from \"./calendarMonthData\";\r\n\r\nexport const isSelectedDay = (date: Date, selectedDate: Date): boolean => {\r\n  return (\r\n    date.getDate() === selectedDate.getDate() &&\r\n    date.getMonth() === selectedDate.getMonth() &&\r\n    date.getFullYear() === selectedDate.getFullYear()\r\n  );\r\n};\r\n\r\nexport const getCalendarWeekData = (firstDayOfWeek: Date) => {\r\n  return Array.from({ length: DAYS_IN_WEEK }, (_, i) => {\r\n    const currentDate = new Date(firstDayOfWeek);\r\n    currentDate.setDate(firstDayOfWeek.getDate() + i);\r\n\r\n    return currentDate;\r\n  });\r\n};\r\n\r\nexport const getCalendarMonthData = (\r\n  monthNumber: number,\r\n  year: number,\r\n  isMondayFirst?: boolean,\r\n) => {\r\n  const totalDaysInMonth = getDaysInMonth(year, monthNumber);\r\n  const monthFirstDay = getMonthFirstDay(year, monthNumber);\r\n\r\n  let daysFromPrevMonth: number;\r\n  if (isMondayFirst) {\r\n    daysFromPrevMonth =\r\n      (DAYS_IN_WEEK + monthFirstDay - DATE_UNIT) % DAYS_IN_WEEK;\r\n  } else {\r\n    daysFromPrevMonth = (DAYS_IN_WEEK + monthFirstDay) % DAYS_IN_WEEK;\r\n  }\r\n\r\n  const { month: prevMonth, year: prevMonthYear } = getPreviousMonth(\r\n    monthNumber,\r\n    year,\r\n  );\r\n  const { month: nextMonth, year: nextMonthYear } = getNextMonth(\r\n    monthNumber,\r\n    year,\r\n  );\r\n\r\n  const prevMonthDays = getDaysInMonth(prevMonthYear, prevMonth);\r\n\r\n  const prevMonthDates = Array.from({ length: daysFromPrevMonth }, (_, i) => {\r\n    const day = prevMonthDays - daysFromPrevMonth + DATE_UNIT + i;\r\n    return new Date(prevMonthYear, prevMonth, day);\r\n  });\r\n\r\n  const currentMonthDates = Array.from({ length: totalDaysInMonth }, (_, i) => {\r\n    const day = i + DATE_UNIT;\r\n    return new Date(year, monthNumber, day);\r\n  });\r\n\r\n  const remainingDays = totalDaysInMonth + daysFromPrevMonth;\r\n  const weeksToAdd = Math.ceil(MAX_CALENDAR_DAYS / DAYS_IN_WEEK);\r\n  const daysToAdd = weeksToAdd * DAYS_IN_WEEK - remainingDays;\r\n\r\n  const nextMonthDates = Array.from({ length: daysToAdd }, (_, i) => {\r\n    const day = i + DATE_UNIT;\r\n    const newDate = new Date(nextMonthYear, nextMonth, day);\r\n\r\n    return newDate.getMonth() === nextMonth ? newDate : null;\r\n  }).filter((date) => date !== null) as Date[];\r\n\r\n  return [...prevMonthDates, ...currentMonthDates, ...nextMonthDates];\r\n};\r\n\r\nexport const getCalendarYearData = (year: number, isMondayFirst = false) => {\r\n  return Array.from({ length: MONTH_COUNT }, (_, month) =>\r\n    getCalendarMonthData(month, year, isMondayFirst),\r\n  );\r\n};\r\n","export interface CalendarProps {\r\n  type: CALENDAR_TYPES;\r\n  isMondayFirst?: boolean;\r\n  isWeekendDate?: (date: Date) => boolean;\r\n  isWithRange?: boolean;\r\n  minDate?: Date;\r\n  maxDate?: Date;\r\n  isTodosEnabled?: boolean;\r\n  isHolidayDate?: (date: Date) => boolean;\r\n}\r\n\r\nexport interface CalendarStyledProps {\r\n  $isRangeExist?: boolean;\r\n  $isTodosEnabled?: boolean;\r\n}\r\n\r\nexport enum CALENDAR_TYPES {\r\n  Week = 1,\r\n  Month = 2,\r\n  Year = 3,\r\n}\r\n","import styled, { DefaultTheme } from \"styled-components\";\r\n\r\nimport { Container } from \"constants/styles/global\";\r\nimport { baseText } from \"constants/styles/mixins\";\r\n\r\nconst spaceM = ({ theme }: DefaultTheme) => theme.spaces.m;\r\n\r\nexport const DayOfWeekGridContainer = styled.div`\r\n  display: grid;\r\n  grid-template-columns: repeat(7, 1fr);\r\n  grid-template-rows: repeat(1, 1fr);\r\n  width: fit-content;\r\n`;\r\n\r\nexport const YearCalendarContainer = styled(DayOfWeekGridContainer)`\r\n  grid-template-columns: repeat(4, 1fr);\r\n  grid-template-rows: repeat(3, 1fr);\r\n  align-items: baseline;\r\n`;\r\n\r\nexport const MiniCalendarWrapper = styled(Container)`\r\n  padding: ${spaceM}px;\r\n  flex-direction: column;\r\n`;\r\n\r\nexport const MonthText = styled.p`\r\n  ${baseText}\r\n\r\n  align-self: flex-start;\r\n  padding-left: ${spaceM}px;\r\n`;\r\n","import { useMemo } from \"react\";\r\n\r\nimport { useCalendar } from \"providers/CalendarProvider\";\r\n\r\nimport { DayOfWeek, WeekdaysHeader } from \"components/index\";\r\n\r\nimport {\r\n  getCalendarMonthData,\r\n  getCalendarWeekData,\r\n  getCalendarYearData,\r\n  isSelectedDay,\r\n} from \"utils/calendarData\";\r\nimport { isCurrentMonth } from \"utils/calendarMonthData\";\r\n\r\nimport { DAYS_IN_WEEK, MONTH } from \"constants/calendarData\";\r\n\r\nimport { CALENDAR_TYPES } from \"../types\";\r\n\r\nimport { DayOfWeekGridProps } from \"./types\";\r\nimport {\r\n  DayOfWeekGridContainer,\r\n  MiniCalendarWrapper,\r\n  MonthText,\r\n  YearCalendarContainer,\r\n} from \"./styled\";\r\n\r\nconst { Week, Month, Year } = CALENDAR_TYPES;\r\n\r\nconst DayOfWeekGrid = (props: DayOfWeekGridProps) => {\r\n  const {\r\n    type,\r\n    isMondayFirst,\r\n    isWeekendDate,\r\n    isWithRange,\r\n    minDate,\r\n    maxDate,\r\n    isTodosEnabled,\r\n    isHolidayDate,\r\n  } = props;\r\n\r\n  const { firstDateOfWeek, selectedDate, selectedMonth, selectedYear } =\r\n    useCalendar();\r\n\r\n  const GREED_DATA = useMemo(() => {\r\n    if (type === Week) {\r\n      return getCalendarWeekData(firstDateOfWeek);\r\n    } else if (type === Month) {\r\n      return getCalendarMonthData(selectedMonth, selectedYear, isMondayFirst);\r\n    }\r\n  }, [firstDateOfWeek, selectedMonth, selectedYear, isMondayFirst, type]);\r\n\r\n  const YEAR_GREED_DATA = useMemo(() => {\r\n    if (type === Year) {\r\n      return getCalendarYearData(selectedYear, isMondayFirst);\r\n    }\r\n  }, [type, selectedYear, isMondayFirst]);\r\n\r\n  return (\r\n    <>\r\n      {GREED_DATA && (\r\n        <DayOfWeekGridContainer data-testid=\"day-of-week-grid\">\r\n          {GREED_DATA.map((date) => {\r\n            return (\r\n              <DayOfWeek\r\n                dayOfWeek={date}\r\n                isDisabled={isCurrentMonth(date, selectedMonth)}\r\n                isHoliday={isHolidayDate && isHolidayDate(date)}\r\n                isSelected={isSelectedDay(date, selectedDate)}\r\n                isTodosEnabled={isTodosEnabled}\r\n                isWeekend={isWeekendDate && isWeekendDate(date)}\r\n                isWithRange={isWithRange}\r\n                key={date.getTime()}\r\n                maxDate={maxDate}\r\n                minDate={minDate}\r\n              />\r\n            );\r\n          })}\r\n        </DayOfWeekGridContainer>\r\n      )}\r\n      {type === Year && YEAR_GREED_DATA && (\r\n        <YearCalendarContainer data-testid=\"day-of-week-grid-year\">\r\n          {YEAR_GREED_DATA.map((month) => {\r\n            const currentMonth = month[DAYS_IN_WEEK].getMonth();\r\n\r\n            return (\r\n              <MiniCalendarWrapper key={month[DAYS_IN_WEEK].getTime()}>\r\n                <MonthText>{MONTH[currentMonth]}</MonthText>\r\n                <WeekdaysHeader isMondayFirst={isMondayFirst} />\r\n                <DayOfWeekGridContainer>\r\n                  {month.map((date) => (\r\n                    <DayOfWeek\r\n                      dayOfWeek={date}\r\n                      isDisabled={isCurrentMonth(date, currentMonth)}\r\n                      isHoliday={isHolidayDate && isHolidayDate(date)}\r\n                      isSelected={isSelectedDay(date, selectedDate)}\r\n                      isTodosEnabled={isTodosEnabled}\r\n                      isWeekend={isWeekendDate && isWeekendDate(date)}\r\n                      isWithRange={isWithRange}\r\n                      key={date.getTime()}\r\n                      maxDate={maxDate}\r\n                      minDate={minDate}\r\n                    />\r\n                  ))}\r\n                </DayOfWeekGridContainer>\r\n              </MiniCalendarWrapper>\r\n            );\r\n          })}\r\n        </YearCalendarContainer>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default DayOfWeekGrid;\r\n","import CaledarIcon from \"assets/icons/calendar.svg\";\r\nimport ClearIcon from \"assets/icons/clear.svg\";\r\nimport CloseIcon from \"assets/icons/close.svg\";\r\nimport NextIcon from \"assets/icons/next.svg\";\r\nimport PrevIcon from \"assets/icons/prev.svg\";\r\n\r\nexport const ICONS = {\r\n  calendar: CaledarIcon,\r\n  clear: ClearIcon,\r\n  close: CloseIcon,\r\n  nextGrid: NextIcon,\r\n  prevGrid: PrevIcon,\r\n};\r\n","var img = \"data:image/svg+xml,%3csvg width='16' height='16' viewBox='0 0 16 16' fill='none' xmlns='http://www.w3.org/2000/svg'%3e%3cg id='Icon / Field / Calendar' clip-path='url(%23clip0_1_7)'%3e%3cpath id='Vector' d='M8.2 9.59999C7.97333 9.59999 7.78347 9.52319 7.6304 9.36959C7.4768 9.21652 7.4 9.02666 7.4 8.79999C7.4 8.57332 7.4768 8.38319 7.6304 8.22959C7.78347 8.07652 7.97333 7.99999 8.2 7.99999C8.42667 7.99999 8.6168 8.07652 8.7704 8.22959C8.92347 8.38319 9 8.57332 9 8.79999C9 9.02666 8.92347 9.21652 8.7704 9.36959C8.6168 9.52319 8.42667 9.59999 8.2 9.59999ZM5 9.59999C4.77333 9.59999 4.5832 9.52319 4.4296 9.36959C4.27653 9.21652 4.2 9.02666 4.2 8.79999C4.2 8.57332 4.27653 8.38319 4.4296 8.22959C4.5832 8.07652 4.77333 7.99999 5 7.99999C5.22667 7.99999 5.4168 8.07652 5.5704 8.22959C5.72347 8.38319 5.8 8.57332 5.8 8.79999C5.8 9.02666 5.72347 9.21652 5.5704 9.36959C5.4168 9.52319 5.22667 9.59999 5 9.59999ZM11.4 9.59999C11.1733 9.59999 10.9835 9.52319 10.8304 9.36959C10.6768 9.21652 10.6 9.02666 10.6 8.79999C10.6 8.57332 10.6768 8.38319 10.8304 8.22959C10.9835 8.07652 11.1733 7.99999 11.4 7.99999C11.6267 7.99999 11.8165 8.07652 11.9696 8.22959C12.1232 8.38319 12.2 8.57332 12.2 8.79999C12.2 9.02666 12.1232 9.21652 11.9696 9.36959C11.8165 9.52319 11.6267 9.59999 11.4 9.59999ZM8.2 12.8C7.97333 12.8 7.78347 12.7232 7.6304 12.5696C7.4768 12.4165 7.4 12.2267 7.4 12C7.4 11.7733 7.4768 11.5835 7.6304 11.4304C7.78347 11.2768 7.97333 11.2 8.2 11.2C8.42667 11.2 8.6168 11.2768 8.7704 11.4304C8.92347 11.5835 9 11.7733 9 12C9 12.2267 8.92347 12.4165 8.7704 12.5696C8.6168 12.7232 8.42667 12.8 8.2 12.8ZM5 12.8C4.77333 12.8 4.5832 12.7232 4.4296 12.5696C4.27653 12.4165 4.2 12.2267 4.2 12C4.2 11.7733 4.27653 11.5835 4.4296 11.4304C4.5832 11.2768 4.77333 11.2 5 11.2C5.22667 11.2 5.4168 11.2768 5.5704 11.4304C5.72347 11.5835 5.8 11.7733 5.8 12C5.8 12.2267 5.72347 12.4165 5.5704 12.5696C5.4168 12.7232 5.22667 12.8 5 12.8ZM11.4 12.8C11.1733 12.8 10.9835 12.7232 10.8304 12.5696C10.6768 12.4165 10.6 12.2267 10.6 12C10.6 11.7733 10.6768 11.5835 10.8304 11.4304C10.9835 11.2768 11.1733 11.2 11.4 11.2C11.6267 11.2 11.8165 11.2768 11.9696 11.4304C12.1232 11.5835 12.2 11.7733 12.2 12C12.2 12.2267 12.1232 12.4165 11.9696 12.5696C11.8165 12.7232 11.6267 12.8 11.4 12.8ZM2.6 16C2.16 16 1.7832 15.8435 1.4696 15.5304C1.15653 15.2168 1 14.84 1 14.4V3.19999C1 2.75999 1.15653 2.38346 1.4696 2.07039C1.7832 1.75679 2.16 1.59999 2.6 1.59999H3.4V-1.04904e-05H5V1.59999H11.4V-1.04904e-05H13V1.59999H13.8C14.24 1.59999 14.6168 1.75679 14.9304 2.07039C15.2435 2.38346 15.4 2.75999 15.4 3.19999V14.4C15.4 14.84 15.2435 15.2168 14.9304 15.5304C14.6168 15.8435 14.24 16 13.8 16H2.6ZM2.6 14.4H13.8V6.39999H2.6V14.4Z' fill='%23AAAAAA'/%3e%3c/g%3e%3cdefs%3e%3cclipPath id='clip0_1_7'%3e%3crect width='16' height='16' fill='white'/%3e%3c/clipPath%3e%3c/defs%3e%3c/svg%3e\";\n  export default img;","var img = \"data:image/svg+xml,%3csvg width='16' height='16' viewBox='0 0 16 16' fill='none' xmlns='http://www.w3.org/2000/svg'%3e%3cg id='Icon / Field / Clear'%3e%3cpath id='Vector' d='M12.9872 3.04239C10.2573 0.319202 5.77739 0.319202 3.04745 3.04239C0.317516 5.76559 0.317516 10.2344 3.04745 12.9576C5.77739 15.6808 10.1873 15.6808 12.9172 12.9576C15.6471 10.2344 15.7171 5.76559 12.9872 3.04239ZM9.97728 10.9327L8.01733 8.97756L6.05738 10.9327L5.0774 9.95511L7.03735 8L5.0774 6.04489L6.05738 5.06733L8.01733 7.02244L9.97728 5.06733L10.9573 6.04489L8.99731 8L10.9573 9.95511L9.97728 10.9327Z' fill='%23AAAAAA'/%3e%3c/g%3e%3c/svg%3e\";\n  export default img;","var img = \"data:image/svg+xml,%3csvg version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink' width='48px' height='48px' viewBox='0%2c0%2c256%2c256'%3e%3cg fill='%23ad1313' fill-rule='nonzero' stroke='none' stroke-width='1' stroke-linecap='butt' stroke-linejoin='miter' stroke-miterlimit='10' stroke-dasharray='' stroke-dashoffset='0' font-family='none' font-weight='none' font-size='none' text-anchor='none' style='mix-blend-mode: normal'%3e%3cg transform='translate(0%2c0) scale(10.66667%2c10.66667)'%3e%3cpath d='M4.70703%2c3.29297l-1.41406%2c1.41406l7.29297%2c7.29297l-7.29297%2c7.29297l1.41406%2c1.41406l7.29297%2c-7.29297l7.29297%2c7.29297l1.41406%2c-1.41406l-7.29297%2c-7.29297l7.29297%2c-7.29297l-1.41406%2c-1.41406l-7.29297%2c7.29297z'%3e%3c/path%3e%3c/g%3e%3c/g%3e%3c/svg%3e\";\n  export default img;","var img = \"data:image/svg+xml,%3csvg width='16' height='16' viewBox='0 0 16 16' fill='none' xmlns='http://www.w3.org/2000/svg'%3e%3cg id='Icon / Calendar / Next'%3e%3cpath id='Vector' d='M4.27337 4L3.33337 4.94L6.38671 8L3.33337 11.06L4.27337 12L8.27337 8L4.27337 4Z' fill='black'/%3e%3cpath id='Vector_2' d='M8.66668 4L7.72668 4.94L10.78 8L7.72668 11.06L8.66668 12L12.6667 8L8.66668 4Z' fill='black'/%3e%3c/g%3e%3c/svg%3e\";\n  export default img;","var img = \"data:image/svg+xml,%3csvg width='16' height='16' viewBox='0 0 16 16' fill='none' xmlns='http://www.w3.org/2000/svg'%3e%3cg id='Icon / Calendar / Prev'%3e%3cpath id='Vector' d='M11.7266 12L12.6666 11.06L9.61329 8L12.6666 4.94L11.7266 4L7.72663 8L11.7266 12Z' fill='black'/%3e%3cpath id='Vector_2' d='M7.33332 12L8.27332 11.06L5.21998 8L8.27331 4.94L7.33331 4L3.33332 8L7.33332 12Z' fill='black'/%3e%3c/g%3e%3c/svg%3e\";\n  export default img;","import { CALENDAR_TYPES } from \"../types\";\r\n\r\nexport const PREV_GRID = \"prevGreed\" as const;\r\nexport const NEXT_GRID = \"nextGreed\" as const;\r\n\r\nexport type Direction = typeof NEXT_GRID | typeof PREV_GRID;\r\n\r\nexport interface GridSliderProps {\r\n  type: CALENDAR_TYPES;\r\n  minDate?: Date;\r\n  maxDate?: Date;\r\n  isMondayFirst?: boolean;\r\n}\r\n","import styled, { DefaultTheme } from \"styled-components\";\r\n\r\nimport { Button, Container } from \"constants/styles/global\";\r\nimport { baseText } from \"constants/styles/mixins\";\r\n\r\nconst spaceS = ({ theme }: DefaultTheme) => theme.spaces.s;\r\nconst fontSizeM = ({ theme }: DefaultTheme) => theme.fonts.fontSize.m;\r\nconst fontWeightL = ({ theme }: DefaultTheme) => theme.fonts.fontWeight.l;\r\n\r\nexport const SliderContainer = styled(Container)`\r\n  padding: ${spaceS}px 0;\r\n  width: 100%;\r\n  min-width: 224px;\r\n  justify-content: space-between;\r\n`;\r\n\r\nexport const SliderButton = styled(Button)`\r\n  width: 16px;\r\n  height: 16px;\r\n`;\r\n\r\nexport const Title = styled.h1`\r\n  ${baseText}\r\n\r\n  font-size: ${fontSizeM}px;\r\n  font-weight: ${fontWeightL};\r\n  cursor: pointer;\r\n`;\r\n","import React, { useCallback, useEffect } from \"react\";\r\n\r\nimport { useCalendar } from \"providers/CalendarProvider\";\r\n\r\nimport { getFirstDayOfWeek } from \"utils/calendarDateData\";\r\n\r\nimport { ICONS } from \"constants/icons\";\r\nimport { Icon } from \"constants/styles/global\";\r\nimport {\r\n  DAYS_IN_WEEK,\r\n  MONTH,\r\n  MONTH_COUNT,\r\n  DATE_UNIT,\r\n} from \"constants/calendarData\";\r\n\r\nimport { CALENDAR_TYPES } from \"../types\";\r\n\r\nimport { Direction, GridSliderProps, PREV_GRID, NEXT_GRID } from \"./types\";\r\nimport { SliderButton, SliderContainer, Title } from \"./styled\";\r\n\r\nconst { Week, Month, Year } = CALENDAR_TYPES;\r\nconst { prevGrid, nextGrid } = ICONS;\r\n\r\nconst GridSlider = React.memo((props: GridSliderProps) => {\r\n  const { type, minDate, maxDate, isMondayFirst } = props;\r\n\r\n  const {\r\n    selectedDate,\r\n    firstDateOfWeek,\r\n    selectedMonth,\r\n    selectedYear,\r\n    setFirstDateOfWeek,\r\n    setSelectedMonth,\r\n    setSelectedYear,\r\n  } = useCalendar();\r\n\r\n  useEffect(() => {\r\n    setFirstDateOfWeek(getFirstDayOfWeek(selectedDate, isMondayFirst));\r\n  }, [isMondayFirst, selectedDate, setFirstDateOfWeek]);\r\n\r\n  const title =\r\n    type === Year\r\n      ? `${selectedYear}`\r\n      : `${MONTH[selectedMonth]} ${selectedYear}`;\r\n\r\n  const handleGridChange = useCallback(\r\n    (direction: Direction) => () => {\r\n      let nextMonth = selectedMonth;\r\n      let nextYear = selectedYear;\r\n      const nextFirstDate = firstDateOfWeek;\r\n\r\n      if (type === Month) {\r\n        if (direction === NEXT_GRID) {\r\n          nextMonth = (selectedMonth + DATE_UNIT) % MONTH_COUNT;\r\n          nextYear =\r\n            selectedMonth === MONTH_COUNT - DATE_UNIT\r\n              ? selectedYear + DATE_UNIT\r\n              : selectedYear;\r\n        } else {\r\n          nextMonth = (selectedMonth - DATE_UNIT + MONTH_COUNT) % MONTH_COUNT;\r\n          nextYear =\r\n            selectedMonth === 0 ? selectedYear - DATE_UNIT : selectedYear;\r\n        }\r\n      }\r\n\r\n      if (type === Week) {\r\n        if (direction === NEXT_GRID) {\r\n          nextFirstDate.setDate(nextFirstDate.getDate() + DAYS_IN_WEEK);\r\n        } else {\r\n          nextFirstDate.setDate(nextFirstDate.getDate() - DAYS_IN_WEEK);\r\n        }\r\n\r\n        nextMonth = firstDateOfWeek.getMonth();\r\n        nextYear = firstDateOfWeek.getFullYear();\r\n        setFirstDateOfWeek(new Date(nextFirstDate));\r\n      }\r\n\r\n      if (type === Year) {\r\n        if (direction === NEXT_GRID) {\r\n          nextYear++;\r\n        } else {\r\n          nextYear--;\r\n        }\r\n      }\r\n\r\n      const nextDate = new Date(nextYear, nextMonth);\r\n      const canChangeMonth =\r\n        (!minDate || nextDate >= minDate) && (!maxDate || nextDate <= maxDate);\r\n\r\n      if (canChangeMonth) {\r\n        setSelectedMonth(nextMonth);\r\n        setSelectedYear(nextYear);\r\n      }\r\n    },\r\n    [\r\n      firstDateOfWeek,\r\n      maxDate,\r\n      minDate,\r\n      selectedMonth,\r\n      selectedYear,\r\n      setFirstDateOfWeek,\r\n      setSelectedMonth,\r\n      setSelectedYear,\r\n      type,\r\n    ],\r\n  );\r\n\r\n  return (\r\n    <SliderContainer>\r\n      <SliderButton\r\n        data-testid=\"prev-button\"\r\n        onClick={handleGridChange(PREV_GRID)}\r\n      >\r\n        <Icon src={prevGrid} />\r\n      </SliderButton>\r\n      <Title data-testid=\"grid-slider\">{title}</Title>\r\n      <SliderButton\r\n        data-testid=\"next-button\"\r\n        onClick={handleGridChange(NEXT_GRID)}\r\n      >\r\n        <Icon src={nextGrid} />\r\n      </SliderButton>\r\n    </SliderContainer>\r\n  );\r\n});\r\n\r\nexport default GridSlider;\r\n","import styled, { DefaultTheme } from \"styled-components\";\r\n\r\nimport { baseText } from \"constants/styles/mixins\";\r\n\r\nconst whiteColor = ({ theme }: DefaultTheme) => theme.colors.white;\r\nconst blackColor = ({ theme }: DefaultTheme) => theme.colors.black;\r\nconst spaceM = ({ theme }: DefaultTheme) => theme.spaces.m;\r\nconst fontSizeM = ({ theme }: DefaultTheme) => theme.fonts.fontSize.m;\r\nconst fontWeightL = ({ theme }: DefaultTheme) => theme.fonts.fontWeight.l;\r\n\r\nexport const WeekdayContainer = styled.div`\r\n  ${baseText}\r\n\r\n  font-size: ${fontSizeM}px;\r\n  font-weight: ${fontWeightL};\r\n  background-color: ${whiteColor};\r\n  color: ${blackColor};\r\n  padding: ${spaceM}px;\r\n  width: 32px;\r\n  height: 32px;\r\n`;\r\n","import React from \"react\";\r\n\r\nimport { WeekdayProps } from \"./types\";\r\nimport { WeekdayContainer } from \"./styled\";\r\n\r\nconst Weekday = React.memo(({ weekday }: WeekdayProps) => {\r\n  return <WeekdayContainer>{weekday}</WeekdayContainer>;\r\n});\r\n\r\nexport default Weekday;\r\n","import React, { useMemo } from \"react\";\r\n\r\nimport { Weekday } from \"components/index\";\r\n\r\nimport { WEEKDAYS } from \"constants/calendarData\";\r\nimport { Container } from \"constants/styles/global\";\r\n\r\nimport { WeekdaysHeaderProps } from \"./types\";\r\n\r\nconst WeekdaysHeader = React.memo(({ isMondayFirst }: WeekdaysHeaderProps) => {\r\n  const WEEKDAYS_ARRAY = useMemo(() => {\r\n    const days = Object.values(WEEKDAYS);\r\n\r\n    return isMondayFirst ? [...days.slice(1), days[0]] : days;\r\n  }, [isMondayFirst]);\r\n\r\n  return (\r\n    <Container>\r\n      {WEEKDAYS_ARRAY.map((day) => (\r\n        <Weekday key={day} weekday={day} />\r\n      ))}\r\n    </Container>\r\n  );\r\n});\r\n\r\nexport default WeekdaysHeader;\r\n","import { useEffect, RefObject } from \"react\";\r\n\r\nconst useClickOutside = (\r\n  ref: RefObject<HTMLElement>,\r\n  handler: (event: MouseEvent) => void,\r\n) => {\r\n  useEffect(() => {\r\n    if (!handler) return;\r\n\r\n    const listener = (event: MouseEvent) => {\r\n      if (ref.current && !ref.current.contains(event.target as Node)) {\r\n        handler(event);\r\n      }\r\n    };\r\n\r\n    document.addEventListener(\"mousedown\", listener);\r\n\r\n    return () => {\r\n      document.removeEventListener(\"mousedown\", listener);\r\n    };\r\n  }, [ref, handler]);\r\n};\r\n\r\nexport default useClickOutside;\r\n","import styled, { DefaultTheme } from \"styled-components\";\r\n\r\nimport { baseText } from \"constants/styles/mixins\";\r\nimport { Container } from \"constants/styles/global\";\r\n\r\nconst fontSizeL = ({ theme }: DefaultTheme) => theme.fonts.fontSize.l;\r\nconst fontSizeS = ({ theme }: DefaultTheme) => theme.fonts.fontSize.s;\r\nconst fontWeightS = ({ theme }: DefaultTheme) => theme.fonts.fontWeight.s;\r\nconst grayColor = ({ theme }: DefaultTheme) => theme.colors.gray;\r\nconst redColor = ({ theme }: DefaultTheme) => theme.colors.red;\r\nconst spaceM = ({ theme }: DefaultTheme) => theme.spaces.m;\r\nconst spaceS = ({ theme }: DefaultTheme) => theme.spaces.s;\r\n\r\nexport const DatePickerContainer = styled(Container)`\r\n  flex-direction: column;\r\n  align-items: flex-start;\r\n`;\r\n\r\nexport const Label = styled.label`\r\n  ${baseText}\r\n\r\n  font-size: ${fontSizeL}px;\r\n`;\r\n\r\nexport const DatePickerInputWrapper = styled(Container)`\r\n  border: 1px solid ${grayColor};\r\n  padding: ${spaceM}px;\r\n  margin: ${spaceM}px 0;\r\n  gap: ${spaceS}px;\r\n  width: 246px;\r\n  justify-content: flex-start;\r\n  border-radius: 8px;\r\n`;\r\n\r\nexport const InfoContainer = styled(Container)`\r\n  gap: ${spaceS}px;\r\n`;\r\n\r\nexport const Error = styled.span`\r\n  ${baseText}\r\n\r\n  font-size: ${fontSizeS}px;\r\n  font-weight: ${fontWeightS};\r\n  color: ${redColor};\r\n`;\r\n","import React, { useCallback, useEffect, useRef, useState } from \"react\";\r\n\r\nimport { useCalendar } from \"providers/CalendarProvider\";\r\nimport { useDate } from \"providers/DateProvider\";\r\n\r\nimport { DatePickerInput, ThemeWrapper } from \"components/index\";\r\n\r\nimport useClickOutside from \"hooks/useClickOutside\";\r\n\r\nimport { formatDate } from \"utils/calendarDateData\";\r\n\r\nimport { ICONS } from \"constants/icons\";\r\nimport { Icon } from \"constants/styles/global\";\r\n\r\nimport { DatePickerPros } from \"./types\";\r\nimport {\r\n  DatePickerInputWrapper,\r\n  Label,\r\n  Error,\r\n  DatePickerContainer,\r\n  InfoContainer,\r\n} from \"./styled\";\r\n\r\nconst { calendar, clear } = ICONS;\r\n\r\nconst DatePicker = React.memo(\r\n  ({ label, rangeValue, Calendar }: DatePickerPros) => {\r\n    const [inputValue, setInputValue] = useState<string>(\"\");\r\n    const [error, setError] = useState<string>(\"\");\r\n    const [isCalendarOpen, setIsCalendarOpen] = useState<boolean>(false);\r\n\r\n    const calendarRef = useRef<HTMLDivElement | null>(null);\r\n\r\n    useClickOutside(calendarRef, () => {\r\n      setError(\"\");\r\n      setInputValue(formatDate(selectedDate));\r\n      setIsCalendarOpen(false);\r\n    });\r\n\r\n    const { selectedDate } = useCalendar();\r\n    const { setRange } = useDate();\r\n\r\n    useEffect(() => {\r\n      setInputValue(formatDate(selectedDate));\r\n    }, [selectedDate]);\r\n\r\n    const handleCalendarIconClick = useCallback(() => {\r\n      setError(\"\");\r\n      setInputValue(formatDate(selectedDate));\r\n      setIsCalendarOpen((prevValue) => !prevValue);\r\n    }, [selectedDate, setIsCalendarOpen]);\r\n\r\n    const handleClearInput = useCallback(() => {\r\n      setError(\"\");\r\n      setInputValue(\"\");\r\n      setRange({ rangeStart: undefined, rangeEnd: undefined });\r\n      setIsCalendarOpen(false);\r\n    }, [setRange]);\r\n\r\n    return (\r\n      <ThemeWrapper>\r\n        <DatePickerContainer>\r\n          <InfoContainer>\r\n            <Label>{label}</Label>\r\n            {error && <Error>{error}</Error>}\r\n          </InfoContainer>\r\n          <DatePickerInputWrapper>\r\n            <Icon\r\n              data-testid=\"calendar-icon-button\"\r\n              src={calendar}\r\n              onClick={handleCalendarIconClick}\r\n            />\r\n            <DatePickerInput\r\n              inputValue={rangeValue || inputValue}\r\n              setError={setError}\r\n              setInputValue={setInputValue}\r\n              setIsCalendarOpen={setIsCalendarOpen}\r\n            />\r\n            {inputValue && (\r\n              <Icon\r\n                data-testid=\"clear-icon-button\"\r\n                src={clear}\r\n                onClick={handleClearInput}\r\n              />\r\n            )}\r\n          </DatePickerInputWrapper>\r\n          <div ref={calendarRef}>{isCalendarOpen && <Calendar />}</div>\r\n        </DatePickerContainer>\r\n      </ThemeWrapper>\r\n    );\r\n  },\r\n);\r\n\r\nexport default DatePicker;\r\n","import styled, { DefaultTheme } from \"styled-components\";\r\n\r\nimport { Container } from \"constants/styles/global\";\r\n\r\nconst spaceM = ({ theme }: DefaultTheme) => theme.spaces.m;\r\n\r\nexport const RangeDatePickerWrapper = styled(Container)`\r\n  gap: ${spaceM}px;\r\n  flex-direction: row;\r\n`;\r\n","import React from \"react\";\r\n\r\nimport { useDate } from \"providers/DateProvider\";\r\n\r\nimport DatePicker from \"components/DatePicker\";\r\nimport ThemeWrapper from \"components/ThemeWrapper\";\r\n\r\nimport { formatDate } from \"utils/calendarDateData\";\r\n\r\nimport { RangeDatePickerPros } from \"./types\";\r\nimport { RANGE_FROM, RANGE_TO } from \"./config\";\r\nimport { RangeDatePickerWrapper } from \"./styled\";\r\n\r\nconst RangeDatePicker = React.memo(({ Calendar }: RangeDatePickerPros) => {\r\n  const { range } = useDate();\r\n\r\n  const rangeStart = range?.rangeStart ? formatDate(range.rangeStart) : \"\";\r\n  const rangeEnd = range?.rangeEnd ? formatDate(range.rangeEnd) : \"\";\r\n\r\n  return (\r\n    <ThemeWrapper>\r\n      <RangeDatePickerWrapper>\r\n        <DatePicker\r\n          Calendar={Calendar}\r\n          label={RANGE_FROM}\r\n          rangeValue={rangeStart}\r\n        />\r\n        <DatePicker\r\n          Calendar={Calendar}\r\n          label={RANGE_TO}\r\n          rangeValue={rangeEnd}\r\n        />\r\n      </RangeDatePickerWrapper>\r\n    </ThemeWrapper>\r\n  );\r\n});\r\n\r\nexport default RangeDatePicker;\r\n","export const RANGE_FROM = \"From\";\r\nexport const RANGE_TO = \"To\";\r\n","export const PLACEHOLDER: string = \"Coose Date\";\r\nexport const ERROR_MESSAGE: string = \"Enter Date in dd/mm/yyyy format\";\r\nexport const INVALID_DATE_MESSAGE: string = \"Invalid Date\";\r\nexport const SEPARATOR: string = \"/\";\r\n\r\nexport const DAY_LENGTH: number = 2;\r\nexport const DAY_SEPORATOR_MONTH_LENGTH: number = 5;\r\nexport const DATE_FORMAT_LENGTH: number = 10;\r\n\r\nexport const MAX_YEAR: number = 9999;\r\n\r\nexport const DATE_FORMAT_REGEX = /^[0-9/]*$/;\r\n","import styled from \"styled-components\";\r\n\r\nimport { BaseInput } from \"constants/styles/global\";\r\n\r\nexport const DateInput = styled(BaseInput)`\r\n  margin: 0;\r\n`;\r\n","import React, { useCallback } from \"react\";\r\n\r\nimport { useCalendar } from \"providers/CalendarProvider\";\r\n\r\nimport { DatePickerInputProps } from \"./types\";\r\nimport {\r\n  PLACEHOLDER,\r\n  ERROR_MESSAGE,\r\n  INVALID_DATE_MESSAGE,\r\n  DAY_LENGTH,\r\n  DAY_SEPORATOR_MONTH_LENGTH,\r\n  SEPARATOR,\r\n  DATE_FORMAT_LENGTH,\r\n  DATE_FORMAT_REGEX,\r\n  MAX_YEAR,\r\n} from \"./config\";\r\nimport { DateInput } from \"./styled\";\r\n\r\nconst DatePickerInput = React.memo((props: DatePickerInputProps) => {\r\n  const { inputValue, setInputValue, setError, setIsCalendarOpen } = props;\r\n\r\n  const { setSelectedDate, setSelectedMonth, setSelectedYear } = useCalendar();\r\n\r\n  const handleKeyDown = useCallback(\r\n    (e: React.KeyboardEvent<HTMLInputElement>) => {\r\n      setError(\"\");\r\n      if (e.key === \"Backspace\" && inputValue.endsWith(SEPARATOR)) {\r\n        setInputValue(inputValue.slice(0, -1));\r\n      }\r\n    },\r\n    [inputValue, setError, setInputValue],\r\n  );\r\n\r\n  const handleFocusInput = useCallback(() => {\r\n    setIsCalendarOpen(true);\r\n  }, []);\r\n\r\n  const handleInputChange = useCallback(\r\n    (e: React.ChangeEvent<HTMLInputElement>) => {\r\n      setError(\"\");\r\n      setIsCalendarOpen(true);\r\n      const value = e.target.value;\r\n\r\n      const validInput = DATE_FORMAT_REGEX.test(value);\r\n\r\n      if (!validInput) {\r\n        e.preventDefault();\r\n        setError(ERROR_MESSAGE);\r\n        return;\r\n      }\r\n\r\n      if (value.length >= DATE_FORMAT_LENGTH) {\r\n        setInputValue(value.substring(0, DATE_FORMAT_LENGTH));\r\n        const parts = value.split(SEPARATOR);\r\n        const day = parseInt(parts[0]);\r\n        const month = parseInt(parts[1]) - 1;\r\n        const year = parseInt(parts[2]);\r\n\r\n        if (year > MAX_YEAR) {\r\n          setError(ERROR_MESSAGE);\r\n          return;\r\n        }\r\n\r\n        const date = new Date(year, month, day);\r\n\r\n        if (\r\n          date.getDate() !== day ||\r\n          date.getMonth() !== month ||\r\n          date.getFullYear() !== year\r\n        ) {\r\n          setError(INVALID_DATE_MESSAGE);\r\n        } else {\r\n          setSelectedDate(date);\r\n          setSelectedMonth(month);\r\n          setSelectedYear(year);\r\n        }\r\n      }\r\n\r\n      if (value.length === DAY_LENGTH) {\r\n        setInputValue(value + SEPARATOR);\r\n      } else if (value.length === DAY_SEPORATOR_MONTH_LENGTH) {\r\n        setInputValue(value + SEPARATOR);\r\n      } else {\r\n        setInputValue(value);\r\n      }\r\n    },\r\n    [\r\n      setError,\r\n      setInputValue,\r\n      setIsCalendarOpen,\r\n      setSelectedDate,\r\n      setSelectedMonth,\r\n      setSelectedYear,\r\n    ],\r\n  );\r\n\r\n  return (\r\n    <DateInput\r\n      data-testid=\"date-picker-input\"\r\n      placeholder={PLACEHOLDER}\r\n      type=\"text\"\r\n      value={inputValue}\r\n      onChange={handleInputChange}\r\n      onFocus={handleFocusInput}\r\n      onKeyDown={handleKeyDown}\r\n    />\r\n  );\r\n});\r\n\r\nexport default DatePickerInput;\r\n","export const ERROR_TITLE: string = \"An error has occured\";\r\nexport const ERROR_TEXT: string = \"(╯°□°）╯︵ ┻━┻\";\r\n","import styled, { DefaultTheme } from \"styled-components\";\r\n\r\nimport { Container } from \"constants/styles/global\";\r\nimport { baseText } from \"constants/styles/mixins\";\r\n\r\nconst redColor = ({ theme }: DefaultTheme) => theme.colors.red;\r\n\r\nexport const ErrorBoundaryContainer = styled(Container)`\r\n  flex-direction: column;\r\n`;\r\n\r\nexport const Error = styled.p`\r\n  ${baseText}\r\n\r\n  color: ${redColor};\r\n`;\r\n\r\nexport const Text = styled.span`\r\n  ${baseText}\r\n\r\n  text-align: center;\r\n`;\r\n","import { Component, ReactNode, ErrorInfo } from \"react\";\r\n\r\nimport { Title } from \"constants/styles/global\";\r\n\r\nimport { ErrorBoundaryState } from \"./types\";\r\nimport { ERROR_TEXT, ERROR_TITLE } from \"./config\";\r\nimport { ErrorBoundaryContainer, Error, Text } from \"./styled\";\r\n\r\ninterface ErrorBoundaryProps {\r\n  children: ReactNode;\r\n}\r\n\r\nclass ErrorBoundary extends Component<ErrorBoundaryProps, ErrorBoundaryState> {\r\n  constructor(props: ErrorBoundaryProps) {\r\n    super(props);\r\n    this.state = {\r\n      hasError: false,\r\n      error: null,\r\n      errorInfo: null,\r\n    };\r\n  }\r\n\r\n  static getDerivedStateFromError(error: Error) {\r\n    return {\r\n      hasError: true,\r\n      error,\r\n    };\r\n  }\r\n\r\n  componentDidCatch(error: Error, errorInfo: ErrorInfo) {\r\n    this.setState({\r\n      errorInfo,\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const { hasError, error, errorInfo } = this.state;\r\n\r\n    if (hasError) {\r\n      return (\r\n        <ErrorBoundaryContainer data-testid=\"error-boundary\">\r\n          <Title>{ERROR_TITLE}</Title>\r\n          <Error>{error && error.toString()}</Error>\r\n          <Text>{ERROR_TEXT}</Text>\r\n          <Text>{errorInfo && errorInfo.componentStack}</Text>\r\n        </ErrorBoundaryContainer>\r\n      );\r\n    }\r\n\r\n    return this.props.children;\r\n  }\r\n}\r\n\r\nexport default ErrorBoundary;\r\n","export const PLACEHOLDER: string = \"Enter todo text\";\r\nexport const BUTTON_TEXT: string = \"Add task\";\r\n","import styled, { DefaultTheme } from \"styled-components\";\r\n\r\nimport { Button, Container } from \"constants/styles/global\";\r\n\r\nconst lightGrayColor = ({ theme }: DefaultTheme) => theme.colors.lightGray;\r\nconst darkBlueColor = ({ theme }: DefaultTheme) => theme.colors.darkBlue;\r\nconst whiteColor = ({ theme }: DefaultTheme) => theme.colors.white;\r\nconst spaceM = ({ theme }: DefaultTheme) => theme.spaces.m;\r\n\r\nexport const Wrapper = styled(Container)`\r\n  gap: ${spaceM}px;\r\n  width: 100%;\r\n`;\r\n\r\nexport const InputWrapper = styled(Container)`\r\n  border: 1px solid ${lightGrayColor};\r\n  margin: ${spaceM}px 0;\r\n  width: 100%;\r\n  justify-content: flex-start;\r\n  border-radius: 8px;\r\n`;\r\n\r\nexport const InputButton = styled(Button)`\r\n  background-color: ${darkBlueColor};\r\n  color: ${whiteColor};\r\n  width: 100px;\r\n  height: 40px;\r\n  border-radius: 8px;\r\n`;\r\n","import React, { ChangeEvent } from \"react\";\r\n\r\nimport { BaseInput } from \"constants/styles/global\";\r\n\r\nimport { TodoInputProps } from \"./types\";\r\nimport { BUTTON_TEXT, PLACEHOLDER } from \"./config\";\r\nimport { Wrapper, InputButton, InputWrapper } from \"./styled\";\r\n\r\nconst TodoInput = React.memo(\r\n  ({ todoText, onChange, onAddTask }: TodoInputProps) => {\r\n    const handleInputChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n      onChange(e);\r\n    };\r\n\r\n    const handleAddTodo = () => {\r\n      onAddTask();\r\n    };\r\n\r\n    const handleInputKeyDown = (e: React.KeyboardEvent<HTMLInputElement>) => {\r\n      if (e.key === \"Enter\") {\r\n        handleAddTodo();\r\n      }\r\n    };\r\n\r\n    return (\r\n      <Wrapper>\r\n        <InputWrapper>\r\n          <BaseInput\r\n            placeholder={PLACEHOLDER}\r\n            type=\"text\"\r\n            value={todoText}\r\n            onChange={handleInputChange}\r\n            onKeyDown={handleInputKeyDown}\r\n          />\r\n        </InputWrapper>\r\n        <InputButton onClick={handleAddTodo}>{BUTTON_TEXT}</InputButton>\r\n      </Wrapper>\r\n    );\r\n  },\r\n);\r\n\r\nexport default TodoInput;\r\n","import styled, { DefaultTheme } from \"styled-components\";\r\n\r\nimport { baseText } from \"constants/styles/mixins\";\r\nimport { Button, Container } from \"constants/styles/global\";\r\n\r\nimport { TodoItemStyledProps } from \"./types\";\r\n\r\nconst lightGrayColor = ({ theme }: DefaultTheme) => theme.colors.lightGray;\r\nconst redColor = ({ theme }: DefaultTheme) => theme.colors.red;\r\nconst spaceM = ({ theme }: DefaultTheme) => theme.spaces.m;\r\n\r\nexport const TodoWrapper = styled(Container)`\r\n  border: 1px solid ${lightGrayColor};\r\n  gap: ${spaceM}px;\r\n  padding: ${spaceM}px;\r\n  justify-content: flex-start;\r\n  width: 100%;\r\n  border-radius: 8px;\r\n`;\r\n\r\nexport const TodoText = styled.p<TodoItemStyledProps>`\r\n  ${baseText}\r\n\r\n  text-decoration: ${({ $isDone }) => ($isDone ? \"line-through\" : \"none\")};\r\n  width: 100%;\r\n  max-width: 433px;\r\n  word-wrap: break-word;\r\n`;\r\n\r\nexport const DeleteTaskButton = styled(Button)`\r\n  &:hover {\r\n    color: ${redColor};\r\n  }\r\n`;\r\n","import React, { useCallback } from \"react\";\r\n\r\nimport { useCalendar } from \"providers/CalendarProvider\";\r\n\r\nimport { getCache, saveCache } from \"utils/dataCaching\";\r\n\r\nimport { Todo } from \"../types\";\r\n\r\nimport { TodoItemProps } from \"./types\";\r\nimport { BUTTON_TEXT } from \"./config\";\r\nimport { DeleteTaskButton, TodoText, TodoWrapper } from \"./styled\";\r\n\r\nconst TodoItem = React.memo((props: TodoItemProps) => {\r\n  const { id, todoText, isDone, setTodos } = props;\r\n\r\n  const { selectedDate } = useCalendar();\r\n\r\n  const handleCheckboxChange = useCallback(() => {\r\n    const TODO_CACHE_KEY = selectedDate.toDateString();\r\n    const todos = getCache<Todo[]>(TODO_CACHE_KEY);\r\n\r\n    const updatedTodos = todos.map((todo: TodoItemProps) => {\r\n      if (todo.id === id) {\r\n        return { ...todo, isDone: !todo.isDone };\r\n      }\r\n\r\n      return todo;\r\n    });\r\n\r\n    setTodos(updatedTodos);\r\n    saveCache(TODO_CACHE_KEY, updatedTodos);\r\n  }, [id, selectedDate, setTodos]);\r\n\r\n  const handleDeleteTodo = useCallback(() => {\r\n    const TODO_CACHE_KEY = selectedDate.toDateString();\r\n    const todos = getCache<Todo[]>(TODO_CACHE_KEY);\r\n\r\n    const updatedTodos = todos.filter((todo: TodoItemProps) => todo.id !== id);\r\n\r\n    setTodos(updatedTodos);\r\n    saveCache(TODO_CACHE_KEY, updatedTodos);\r\n  }, [id, selectedDate, setTodos]);\r\n\r\n  return (\r\n    <TodoWrapper>\r\n      <input checked={isDone} type=\"checkbox\" onChange={handleCheckboxChange} />\r\n      <TodoText $isDone={isDone}>{todoText}</TodoText>\r\n      <DeleteTaskButton onClick={handleDeleteTodo}>\r\n        {BUTTON_TEXT}\r\n      </DeleteTaskButton>\r\n    </TodoWrapper>\r\n  );\r\n});\r\n\r\nexport default TodoItem;\r\n","export const BUTTON_TEXT: string = \"Delete\";\r\n","import styled, { DefaultTheme } from \"styled-components\";\r\n\r\nimport { Button, Container } from \"constants/styles/global\";\r\n\r\nconst spaceM = ({ theme }: DefaultTheme) => theme.spaces.m;\r\nconst grayColor = ({ theme }: DefaultTheme) => theme.colors.gray;\r\nconst lightGrayColor = ({ theme }: DefaultTheme) => theme.colors.lightGray;\r\nconst whiteColor = ({ theme }: DefaultTheme) => theme.colors.white;\r\n\r\nexport const ModalContainer = styled(Container)`\r\n  height: 100%;\r\n  width: 100%;\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n`;\r\n\r\nexport const ModalWindow = styled(Container)`\r\n  box-shadow: 0px 0px 13px 0px ${lightGrayColor};\r\n  background-color: ${whiteColor};\r\n  border: 1px solid ${grayColor};\r\n  padding: ${spaceM}px;\r\n  flex-direction: column;\r\n  width: 100%;\r\n  max-width: 550px;\r\n  height: fit-content;\r\n  position: relative;\r\n  border-radius: 10px;\r\n`;\r\n\r\nexport const CloseButton = styled(Button)`\r\n  align-self: flex-end;\r\n  transition: transform 0.3s;\r\n\r\n  &:hover {\r\n    transform: scale(1.15);\r\n  }\r\n`;\r\n","import React, { useRef } from \"react\";\r\n\r\nimport useClickOutside from \"hooks/useClickOutside\";\r\n\r\nimport { ICONS } from \"constants/icons\";\r\nimport { Icon } from \"constants/styles/global\";\r\n\r\nimport { ModalProps } from \"./types\";\r\nimport { CloseButton, ModalWindow, ModalContainer } from \"./styled\";\r\n\r\nconst { close } = ICONS;\r\n\r\nconst Modal = React.memo(({ children, onClose }: ModalProps) => {\r\n  const modalRef = useRef<HTMLDivElement | null>(null);\r\n\r\n  useClickOutside(modalRef, onClose);\r\n\r\n  const handleCloseButtonClick = () => {\r\n    onClose();\r\n  };\r\n\r\n  return (\r\n    <ModalContainer>\r\n      <ModalWindow ref={modalRef}>\r\n        <CloseButton\r\n          data-testid=\"modal-close-button\"\r\n          onClick={handleCloseButtonClick}\r\n        >\r\n          <Icon src={close} />\r\n        </CloseButton>\r\n        {children}\r\n      </ModalWindow>\r\n    </ModalContainer>\r\n  );\r\n});\r\n\r\nexport default Modal;\r\n","import styled, { DefaultTheme } from \"styled-components\";\r\n\r\nimport { Container } from \"constants/styles/global\";\r\n\r\nconst spaceM = ({ theme }: DefaultTheme) => theme.spaces.m;\r\n\r\nexport const TasksWrapper = styled(Container)`\r\n  gap: ${spaceM}px;\r\n  justify-content: flex-start;\r\n  flex-direction: column;\r\n  width: 100%;\r\n  max-height: 350px;\r\n  overflow: auto;\r\n`;\r\n","import React, { ChangeEvent, useCallback, useState, useEffect } from \"react\";\n\r\nimport { useCalendar } from \"providers/CalendarProvider\";\n\r\nimport { TodoInput, TodoItem } from \"components/index\";\r\nimport Modal from \"components/Modal\";\r\n\r\nimport { getCache, saveCache } from \"utils/dataCaching\";\r\n\r\nimport { Title } from \"constants/styles/global\";\r\n\r\nimport { Todo, TodosModalProps } from \"./types\";\r\nimport { HINT, TITLE_TEXT } from \"./config\";\r\nimport { TasksWrapper } from \"./styled\";\r\n\r\nconst TodosModal = React.memo(({ onClose }: TodosModalProps) => {\r\n  const [todoText, setTodoText] = useState<string>(\"\");\r\n  const [todos, setTodos] = useState<Todo[]>([]);\r\n\r\n  const { selectedDate } = useCalendar();\r\n\r\n  useEffect(() => {\r\n    const TODO_CACHE_KEY = selectedDate.toDateString();\r\n    const cachedTodos = getCache<Todo[]>(TODO_CACHE_KEY);\r\n\r\n    if (cachedTodos) {\r\n      setTodos(cachedTodos);\r\n    }\r\n  }, [selectedDate]);\r\n\r\n  const handleCloseModal = useCallback(() => {\r\n    onClose();\r\n  }, [onClose]);\r\n\r\n  const handleInputChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\r\n    setTodoText(e.target.value);\r\n  }, []);\r\n\r\n  const handleAddTodo = useCallback(() => {\r\n    if (todoText.trim() !== \"\") {\r\n      const TODO_CACHE_KEY = selectedDate.toDateString();\r\n      const existingTodos = [...todos];\r\n      const newTodo = {\r\n        id: String(new Date().getTime()),\r\n        todoText: todoText,\r\n        isDone: false,\r\n      };\r\n\r\n      existingTodos.push(newTodo);\r\n      setTodos(existingTodos);\r\n      saveCache(TODO_CACHE_KEY, existingTodos);\r\n\r\n      setTodoText(\"\");\r\n    }\r\n  }, [todoText, todos, selectedDate]);\r\n\r\n  const TODO_ITEMS = todos.map(({ id, ...todo }) => (\r\n    <TodoItem id={id} key={id} setTodos={setTodos} {...todo} />\r\n  ));\r\n\r\n  return (\r\n    <Modal data-testid=\"todo-modal\" onClose={handleCloseModal}>\r\n      <Title>{TITLE_TEXT.replace(\"{Date}\", selectedDate.toDateString())}</Title>\r\n      <TodoInput\r\n        todoText={todoText}\r\n        onAddTask={handleAddTodo}\r\n        onChange={handleInputChange}\r\n      />\r\n      <TasksWrapper>{todos.length !== 0 ? TODO_ITEMS : HINT}</TasksWrapper>\r\n    </Modal>\r\n  );\r\n});\r\n\r\nexport default TodosModal;\r\n","export const TITLE_TEXT = \"Todos for {Date}\";\r\nexport const HINT = \"Add some tasks\";\r\n","import styled, { DefaultTheme } from \"styled-components\";\r\n\r\nimport { Container } from \"constants/styles/global\";\r\n\r\nimport { CalendarStyledProps } from \"./types\";\r\n\r\nconst grayColor = ({ theme }: DefaultTheme) => theme.colors.gray;\r\nconst whiteColor = ({ theme }: DefaultTheme) => theme.colors.white;\r\n\r\nexport const CalendarContainer = styled(Container)<CalendarStyledProps>`\r\n  background-color: ${whiteColor};\r\n  border: 1px solid ${grayColor};\r\n  border-bottom: ${({ $isRangeExist, $isTodosEnabled }) =>\r\n    ($isRangeExist || $isTodosEnabled) && `none`};\r\n  border-radius: ${({ $isRangeExist, $isTodosEnabled }) =>\r\n    $isRangeExist || $isTodosEnabled ? `8px 8px 0 0` : \"8px\"};\r\n  padding: 10px;\r\n  flex-direction: column;\r\n  width: fit-content;\r\n`;\r\n","import { useCallback } from \"react\";\r\n\r\nimport { useDate } from \"providers/DateProvider\";\r\nimport { CalendarProvider } from \"providers/CalendarProvider\";\r\n\r\nimport {\r\n  GridSlider,\r\n  DayOfWeekGrid,\r\n  WeekdaysHeader,\r\n  Button,\r\n} from \"components/index\";\r\nimport ErrorBoundary from \"components/ErrorBoundary\";\r\nimport ThemeWrapper from \"components/ThemeWrapper\";\r\n\r\nimport { CALENDAR_TYPES, CalendarProps } from \"./types\";\r\nimport { CLEAR_BUTTON_TITLE } from \"./config\";\r\nimport { CalendarContainer } from \"./styled\";\r\n\r\nconst { Month, Week } = CALENDAR_TYPES;\r\n\r\nconst Calendar = (props: CalendarProps) => {\r\n  const {\r\n    type = Month,\r\n    isMondayFirst,\r\n    isWeekendDate,\r\n    isWithRange,\r\n    minDate,\r\n    maxDate,\r\n    isTodosEnabled,\r\n    isHolidayDate,\r\n  } = props;\r\n\r\n  const { range, setRange } = useDate();\r\n\r\n  const handlClearButtonClick = useCallback(() => {\r\n    if (setRange) {\r\n      setRange(undefined);\r\n    }\r\n  }, [setRange]);\r\n\r\n  const isRangeExist =\r\n    isWithRange && Boolean(range?.rangeStart) && Boolean(range?.rangeEnd);\r\n\r\n  return (\r\n    <ThemeWrapper>\r\n      <ErrorBoundary>\r\n        <CalendarContainer\r\n          $isRangeExist={isRangeExist}\r\n          $isTodosEnabled={isTodosEnabled}\r\n          data-testid=\"calendar\"\r\n        >\r\n          <GridSlider\r\n            isMondayFirst={isMondayFirst}\r\n            maxDate={maxDate}\r\n            minDate={minDate}\r\n            type={type}\r\n          />\r\n          {(type === Week || type === Month) && (\r\n            <WeekdaysHeader isMondayFirst={isMondayFirst} />\r\n          )}\r\n          <DayOfWeekGrid\r\n            isHolidayDate={isHolidayDate}\r\n            isMondayFirst={isMondayFirst}\r\n            isTodosEnabled={isTodosEnabled}\r\n            isWeekendDate={isWeekendDate}\r\n            isWithRange={isWithRange}\r\n            maxDate={maxDate}\r\n            minDate={minDate}\r\n            type={type}\r\n          />\r\n        </CalendarContainer>\r\n        {isRangeExist && (\r\n          <Button\r\n            $isTodosEnabled={isTodosEnabled}\r\n            title={CLEAR_BUTTON_TITLE}\r\n            onButtonClick={handlClearButtonClick}\r\n          />\r\n        )}\r\n      </ErrorBoundary>\r\n    </ThemeWrapper>\r\n  );\r\n};\r\n\r\nexport default Calendar;\r\n","export const CLEAR_BUTTON_TITLE: string = \"Clear Range\";\r\n","import React from \"react\";\r\n\r\nimport Calendar from \"components/Calendar\";\r\nimport { CalendarProps } from \"components/Calendar/types\";\r\n\r\nclass CalendarService {\r\n  private calendar: React.FC<CalendarProps>;\r\n\r\n  constructor() {\r\n    this.calendar = Calendar;\r\n  }\r\n\r\n  public addDecorator(\r\n    decorator: (calendar: React.FC<CalendarProps>) => React.FC<CalendarProps>,\r\n  ): void {\r\n    this.calendar = decorator(this.calendar);\r\n  }\r\n\r\n  public getCalendar(): React.FC<CalendarProps> {\r\n    return this.calendar;\r\n  }\r\n}\r\n\r\nexport default CalendarService;\r\n","import { ComponentType } from \"react\";\r\n\r\nimport { CalendarProps } from \"components/Calendar/types\";\r\n\r\nimport { isHolidayDate } from \"utils/calendarDateData\";\r\n\r\ninterface WithHolidaysProps extends Pick<CalendarProps, \"isHolidayDate\"> {}\r\n\r\nconst withHolidayDays = <T extends WithHolidaysProps>(\r\n  WrappedComponent: ComponentType<T>,\r\n) => {\r\n  const ComponentHolidaysDays = (props: Omit<T, keyof WithHolidaysProps>) => {\r\n    return <WrappedComponent {...(props as T)} isHolidayDate={isHolidayDate} />;\r\n  };\r\n\r\n  const displayName = WrappedComponent.displayName || WrappedComponent.name;\r\n  ComponentHolidaysDays.displayName = `withHolidays(${displayName})`;\r\n\r\n  return ComponentHolidaysDays;\r\n};\r\n\r\nexport default withHolidayDays;\r\n","import { ComponentType } from \"react\";\r\n\r\nimport { CalendarProps } from \"components/Calendar/types\";\r\n\r\ninterface WithMondayFirstProps extends Pick<CalendarProps, \"isMondayFirst\"> {}\r\n\r\nconst withMondayFirst = <T extends WithMondayFirstProps>(\r\n  WrappedComponent: ComponentType<T>,\r\n) => {\r\n  const ComponentWithMondayFirst = (\r\n    props: Omit<T, keyof WithMondayFirstProps>,\r\n  ) => {\r\n    return <WrappedComponent {...(props as T)} isMondayFirst={true} />;\r\n  };\r\n\r\n  const displayName = WrappedComponent.displayName || WrappedComponent.name;\r\n  ComponentWithMondayFirst.displayName = `withMondayFirst(${displayName})`;\r\n\r\n  return ComponentWithMondayFirst;\r\n};\r\n\r\nexport default withMondayFirst;\r\n","import { ComponentType } from \"react\";\r\n\r\nimport { CalendarProps } from \"components/Calendar/types\";\r\n\r\ninterface WithRangeProps extends Pick<CalendarProps, \"isWithRange\"> {}\r\n\r\nconst withRange = <T extends WithRangeProps>(\r\n  WrappedComponent: ComponentType<T>,\r\n) => {\r\n  const ComponentWithRange = (props: Omit<T, keyof WithRangeProps>) => {\r\n    return <WrappedComponent {...(props as T)} isWithRange={true} />;\r\n  };\r\n\r\n  const displayName = WrappedComponent.displayName || WrappedComponent.name;\r\n  ComponentWithRange.displayName = `withRange(${displayName})`;\r\n\r\n  return ComponentWithRange;\r\n};\r\n\r\nexport default withRange;\r\n","import { ComponentType, useCallback, useState } from \"react\";\r\n\r\nimport { useCalendar } from \"providers/CalendarProvider\";\r\n\r\nimport { Button, ThemeWrapper, TodosModal } from \"components/index\";\r\nimport { CalendarProps } from \"components/Calendar/types\";\r\n\r\nimport usePortal from \"hooks/usePortal\";\r\n\r\nimport { getCache } from \"utils/dataCaching\";\r\n\r\nimport { ADD_TASK_BUTTON_TITLE, VIEW_TASK_BUTTON_TITLE } from \"./config\";\r\n\r\ninterface WithRangeProps extends Pick<CalendarProps, \"isTodosEnabled\"> {}\r\n\r\nconst withTodo = <T extends WithRangeProps>(\r\n  WrappedComponent: ComponentType<T>,\r\n) => {\r\n  const ComponentWithTodo = (props: Omit<T, keyof WithRangeProps>) => {\r\n    const [isTodoModalOpen, setIsTodoModalOpen] = useState(false);\r\n\r\n    const { selectedDate } = useCalendar();\r\n    const todosPortal = usePortal();\r\n\r\n    const handleOpenTodo = useCallback(() => {\r\n      setIsTodoModalOpen(true);\r\n    }, []);\r\n\r\n    const handleCloseTodoModal = useCallback(() => {\r\n      setIsTodoModalOpen(false);\r\n    }, []);\r\n\r\n    const todos = getCache(selectedDate.toDateString());\r\n    const isTodosExist = todos.length !== 0;\r\n\r\n    return (\r\n      <ThemeWrapper>\r\n        <WrappedComponent {...(props as T)} isTodosEnabled={true} />\r\n        <Button\r\n          title={isTodosExist ? VIEW_TASK_BUTTON_TITLE : ADD_TASK_BUTTON_TITLE}\r\n          onButtonClick={handleOpenTodo}\r\n        />\r\n        {isTodoModalOpen &&\r\n          todosPortal(<TodosModal onClose={handleCloseTodoModal} />)}\r\n      </ThemeWrapper>\r\n    );\r\n  };\r\n\r\n  const displayName = WrappedComponent.displayName || WrappedComponent.name;\r\n  ComponentWithTodo.displayName = `withTodo(${displayName})`;\r\n\r\n  return ComponentWithTodo;\r\n};\r\n\r\nexport default withTodo;\r\n","import { ReactNode, useEffect, useRef } from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nimport { DEFAULT_ID } from \"./config\";\r\n\r\nfunction usePortal(id = DEFAULT_ID) {\r\n  const portalContainerRef = useRef<HTMLElement | null>(null);\r\n\r\n  useEffect(() => {\r\n    let element = document.getElementById(id);\r\n    let elementCreated = false;\r\n\r\n    if (!element) {\r\n      elementCreated = true;\r\n      element = document.createElement(\"div\");\r\n      element.id = id;\r\n      document.body.appendChild(element);\r\n    }\r\n\r\n    portalContainerRef.current = element;\r\n\r\n    return () => {\r\n      if (elementCreated && element?.parentNode) {\r\n        element.parentNode.removeChild(element);\r\n      }\r\n    };\r\n  }, [id]);\r\n\r\n  const createPortal = (element: ReactNode) => {\r\n    if (portalContainerRef.current) {\r\n      return ReactDOM.createPortal(element, portalContainerRef.current);\r\n    }\r\n  };\r\n\r\n  return createPortal;\r\n}\r\n\r\nexport default usePortal;\r\n","export const DEFAULT_ID = \"todo-portal-wrapper\";\r\n","export const ADD_TASK_BUTTON_TITLE: string = \"Add Task\";\r\nexport const VIEW_TASK_BUTTON_TITLE: string = \"View Tasks\";\r\n","import { ComponentType } from \"react\";\r\n\r\nimport { CalendarProps } from \"components/Calendar/types\";\r\n\r\nimport { isWeekendDate } from \"utils/calendarDateData\";\r\n\r\ninterface WithWeekendsProps extends Pick<CalendarProps, \"isWeekendDate\"> {}\r\n\r\nconst withWeekendsDays = <T extends WithWeekendsProps>(\r\n  WrappedComponent: ComponentType<T>,\r\n) => {\r\n  const ComponentWeekendsDays = (props: Omit<T, keyof WithWeekendsProps>) => {\r\n    return <WrappedComponent {...(props as T)} isWeekendDate={isWeekendDate} />;\r\n  };\r\n\r\n  const displayName = WrappedComponent.displayName || WrappedComponent.name;\r\n  ComponentWeekendsDays.displayName = `withWeekendsDays(${displayName})`;\r\n\r\n  return ComponentWeekendsDays;\r\n};\r\n\r\nexport default withWeekendsDays;\r\n"],"names":["defaultMinDate","Date","defaultMaxDate","DateContext","createContext","minDate","maxDate","range","undefined","setMinDate","setMaxDate","setRange","useDate","useContext","COLORS","white","black","gray","lightGray","darkBlueHover","darkBlue","blue","lightBlue","red","orange","FONTS","fontFamily","openSans","fontSize","xl","l","m","s","fontWeight","SPACES","THEME","colors","fonts","spaces","displayFlex","css","flexColumn","contentCenter","baseText","GlobalStyle","createGlobalStyle","Button","styled","button","Container","div","Icon","img","Title","h1","BaseInput","input","ThemeWrapper","children","_jsxs","_Fragment","_jsx","jsx","ThemeProvider","theme","grayColor","ButtonContainer","$isTodosEnabled","React","default","memo","title","onButtonClick","onClick","RANGE_STATE","WEEKDAYS","Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday","MONTH","MONTH_COUNT","HOLIDAYS","name","date","getFirstDayOfWeek","selectedDate","isMondayFirst","firstDay","dayOfWeek","getDay","daysToMonday","DAYS_IN_WEEK","setDate","getDate","isWeekendDate","isHolidayDate","some","holiday","getMonth","formatDate","toString","padStart","getFullYear","month","year","firstDayOfWeek","CalendarContext","firstDateOfWeek","selectedMonth","selectedYear","setFirstDateOfWeek","setSelectedDate","setSelectedMonth","setSelectedYear","useCalendar","getCache","cacheKey","cachedData","localStorage","getItem","JSON","parse","saveCache","cacheValue","setItem","stringify","Start","Between","End","darkBlueHoverColor","DayOfWeekButton","$isSelected","$rangeState","determineBackgroundColor","$isDisabled","$isWeekend","$isHoliday","determineTextColor","determineRadius","Dot","DayofWeek","props","isSelected","isDisabled","isWeekend","isWithRange","isTodosEnabled","isHoliday","day","handleSelectDate","useCallback","rangeStart","rangeEnd","start","rangeArr","todos","toDateString","getTime","getRangeState","length","isCurrentMonth","getDaysInMonth","isSelectedDay","getCalendarMonthData","monthNumber","totalDaysInMonth","monthFirstDay","getMonthFirstDay","daysFromPrevMonth","prevMonth","prevMonthYear","getPreviousMonth","nextMonth","nextMonthYear","getNextMonth","prevMonthDays","prevMonthDates","Array","from","_","i","currentMonthDates","remainingDays","daysToAdd","Math","ceil","MAX_CALENDAR_DAYS","nextMonthDates","newDate","filter","CALENDAR_TYPES","spaceM","DayOfWeekGridContainer","YearCalendarContainer","MiniCalendarWrapper","MonthText","p","Week","Month","Year","DayOfWeekGrid","type","GREED_DATA","useMemo","currentDate","getCalendarWeekData","YEAR_GREED_DATA","getCalendarYearData","map","DayOfWeek","currentMonth","WeekdaysHeader","ICONS","calendar","clear","close","nextGrid","prevGrid","NEXT_GRID","SliderContainer","SliderButton","GridSlider","useEffect","handleGridChange","direction","nextYear","nextFirstDate","nextDate","jsxs","src","WeekdayContainer","Weekday","weekday","WEEKDAYS_ARRAY","days","Object","values","slice","useClickOutside","ref","handler","listener","event","current","contains","target","document","addEventListener","removeEventListener","spaceS","DatePickerContainer","Label","label","DatePickerInputWrapper","InfoContainer","Error","span","DatePicker","rangeValue","Calendar","inputValue","setInputValue","useState","error","setError","isCalendarOpen","setIsCalendarOpen","calendarRef","useRef","handleCalendarIconClick","prevValue","handleClearInput","DatePickerInput","RangeDatePickerWrapper","ERROR_MESSAGE","SEPARATOR","DATE_FORMAT_REGEX","DateInput","handleKeyDown","e","key","endsWith","handleFocusInput","handleInputChange","value","test","preventDefault","substring","parts","split","parseInt","placeholder","onChange","onFocus","onKeyDown","DatePickerInput$1","ErrorBoundaryContainer","Text","ErrorBoundary","Component","constructor","super","this","state","hasError","errorInfo","getDerivedStateFromError","componentDidCatch","setState","render","componentStack","Wrapper","InputWrapper","InputButton","TodoInput","todoText","onAddTask","handleAddTodo","TodoWrapper","TodoText","$isDone","DeleteTaskButton","TodoItem","id","isDone","setTodos","handleCheckboxChange","TODO_CACHE_KEY","updatedTodos","todo","handleDeleteTodo","checked","ModalContainer","ModalWindow","CloseButton","Modal","onClose","modalRef","TasksWrapper","TodosModal","setTodoText","cachedTodos","handleCloseModal","trim","existingTodos","newTodo","String","push","TODO_ITEMS","replace","CalendarContainer","$isRangeExist","handlClearButtonClick","isRangeExist","Boolean","addDecorator","decorator","getCalendar","Provider","WrappedComponent","ComponentHolidaysDays","displayName","ComponentWithMondayFirst","ComponentWithRange","ComponentWithTodo","isTodoModalOpen","setIsTodoModalOpen","todosPortal","portalContainerRef","element","getElementById","elementCreated","createElement","body","appendChild","parentNode","removeChild","ReactDOM","createPortal","usePortal","handleOpenTodo","handleCloseTodoModal","isTodosExist","ComponentWeekendsDays"],"mappings":"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"}